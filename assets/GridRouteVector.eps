%!PS-Adobe-3.0 EPSF-3.0
%APL_DSC_Encoding: UTF8
%APLProducer: (Version 10.15.2 (Build 19C57) Quartz PS Context)
%%Title: (Unknown)
%%Creator: (Unknown)
%%CreationDate: (Unknown)
%%For: (Unknown)
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox: 0 0 757 708
%%EndComments
%%BeginProlog
%%BeginFile: cg-pdf.ps
%%Copyright: Copyright 2000-2004 Apple Computer Incorporated.
%%Copyright: All Rights Reserved.
currentpacking true setpacking
/cg_md 141 dict def
cg_md begin
/L3? languagelevel 3 ge def
/bd{bind def}bind def
/ld{load def}bd
/xs{exch store}bd
/xd{exch def}bd
/cmmtx matrix def
mark
/sc/setcolor
/scs/setcolorspace
/dr/defineresource
/fr/findresource
/T/true
/F/false
/d/setdash
/w/setlinewidth
/J/setlinecap
/j/setlinejoin
/M/setmiterlimit
/i/setflat
/rc/rectclip
/rf/rectfill
/rs/rectstroke
/f/fill
/f*/eofill
/sf/selectfont
/s/show
%/as/ashow
/xS/xshow
/yS/yshow
/xyS/xyshow
/S/stroke
/m/moveto
/l/lineto
/c/curveto
/h/closepath
/n/newpath
/q/gsave
/Q/grestore
counttomark 2 idiv
%dup (number of ld's = )print == flush	% *** how many 
{ld}repeat pop
/SC{	% CSname
    /ColorSpace fr scs
}bd
/sopr /setoverprint where{pop/setoverprint}{/pop}ifelse ld
/soprm /setoverprintmode where{pop/setoverprintmode}{/pop}ifelse ld
/cgmtx matrix def
/sdmtx{cgmtx currentmatrix pop}bd
/CM {cgmtx setmatrix}bd		% pop the ctm: our gstate ctm on host is now identity
/cm {cmmtx astore CM concat}bd	% reset the matrix and then concat
/W{clip newpath}bd
/W*{eoclip newpath}bd

statusdict begin product end dup (HP) anchorsearch{
    pop pop pop	% pop off the search results
    true
}{
    pop	% previous search result
   (hp) anchorsearch{
	pop pop true
    }{
	pop false
    }ifelse
}ifelse

{	% HP is the product: we use this method of stroking because of a bug in their clone printers with certain T3 fonts
    { 
	{ % charCode Wx Wy
	    pop pop % charCode
	    (0)dup 0 4 -1 roll put
	    F charpath
	}cshow
    }
}{
    {F charpath}
}ifelse
/cply exch bd
/cps {cply stroke}bd
/pgsave 0 def
/bp{/pgsave save store}bd
/ep{pgsave restore showpage}def		% dont' bind
/re{4 2 roll m 1 index 0 rlineto 0 exch rlineto neg 0 rlineto h}bd

/scrdict 10 dict def
/scrmtx matrix def
/patarray 0 def
/createpat{patarray 3 1 roll put}bd
/makepat{
scrmtx astore pop
gsave
initgraphics
CM 
patarray exch get
scrmtx
makepattern
grestore
setpattern
}bd

/cg_BeginEPSF{
    userdict save/cg_b4_Inc_state exch put
    userdict/cg_endepsf/cg_EndEPSF load put
    count userdict/cg_op_count 3 -1 roll put 
    countdictstack dup array dictstack userdict/cg_dict_array 3 -1 roll put
    3 sub{end}repeat
    /showpage {} def
    0 setgray 0 setlinecap 1 setlinewidth 0 setlinejoin
    10 setmiterlimit [] 0 setdash newpath
    false setstrokeadjust false setoverprint	% don't use F
}bd
/cg_EndEPSF{
  countdictstack 3 sub { end } repeat
  cg_dict_array 3 1 index length 3 sub getinterval
  {begin}forall
  count userdict/cg_op_count get sub{pop}repeat
  userdict/cg_b4_Inc_state get restore
  F setpacking
}bd

/cg_biproc{currentfile/RunLengthDecode filter}bd
/cg_aiproc{currentfile/ASCII85Decode filter/RunLengthDecode filter}bd
/ImageDataSource 0 def
L3?{
    /cg_mibiproc{pop pop/ImageDataSource{cg_biproc}def}bd
    /cg_miaiproc{pop pop/ImageDataSource{cg_aiproc}def}bd
}{
    /ImageBandMask 0 def
    /ImageBandData 0 def
    /cg_mibiproc{
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/RunLengthDecode filter dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
    /cg_miaiproc{	
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/ASCII85Decode filter/RunLengthDecode filter
	    dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
}ifelse
/imsave 0 def
/BI{save/imsave xd mark}bd
/EI{imsave restore}bd
/ID{
counttomark 2 idiv
dup 2 add	% leave room for imagetype and imagematrix
dict begin
{def} repeat
pop		% remove mark
/ImageType 1 def
/ImageMatrix[Width 0 0 Height neg 0 Height]def
currentdict dup/ImageMask known{ImageMask}{F}ifelse exch
% currentdict on stack
L3?{
    dup/MaskedImage known
    { 
	pop
	<<
	    /ImageType 3
	    /InterleaveType 2
	    /DataDict currentdict
	    /MaskDict
	    <<  /ImageType 1
		/Width Width
		/Height Height
		/ImageMatrix ImageMatrix
		/BitsPerComponent 1
		/Decode [0 1]
		currentdict/Interpolate known
		{/Interpolate Interpolate}if
	    >>
	>>
    }if
}if
exch
{imagemask}{image}ifelse	
end	% pop imagedict from dict stack
}bd

/cguidfix{statusdict begin mark version end
{cvr}stopped{cleartomark 0}{exch pop}ifelse
2012 lt{dup findfont dup length dict begin
{1 index/FID ne 2 index/UniqueID ne and
{def} {pop pop} ifelse}forall
currentdict end definefont pop
}{pop}ifelse
}bd
/t_array 0 def
/t_i 0 def
/t_c 1 string def
/x_proc{ % x y
    exch t_array t_i get add exch moveto
    /t_i t_i 1 add store
}bd
/y_proc{ % x y
    t_array t_i get add moveto
    /t_i t_i 1 add store
}bd
/xy_proc{
        % x y
	t_array t_i 2 copy 1 add get 3 1 roll get 
	4 -1 roll add 3 1 roll add moveto
	/t_i t_i 2 add store
}bd
/sop 0 def		% don't bind sop
/cp_proc/x_proc ld 	% default moveto proc is for xwidths only
/base_charpath		% string array
{
    /t_array xs
    /t_i 0 def
    { % char
	t_c 0 3 -1 roll put
        currentpoint
	t_c cply sop
        cp_proc
    }forall
    /t_array 0 def
}bd
/sop/stroke ld		% default sop is stroke. Done here so we don't bind in /base_charpath 

% default sop is stroke
/nop{}def
/xsp/base_charpath ld
/ysp{/cp_proc/y_proc ld base_charpath/cp_proc/x_proc ld}bd
/xysp{/cp_proc/xy_proc ld base_charpath/cp_proc/x_proc ld}bd
/xmp{/sop/nop ld /cp_proc/x_proc ld base_charpath/sop/stroke ld}bd
/ymp{/sop/nop ld /cp_proc/y_proc ld base_charpath/sop/stroke ld}bd
/xymp{/sop/nop ld /cp_proc/xy_proc ld base_charpath/sop/stroke ld}bd
/refnt{ % newname encoding fontname
findfont dup length dict copy dup
/Encoding 4 -1 roll put 
definefont pop
}bd
/renmfont{ % newname fontname
findfont dup length dict copy definefont pop
}bd

L3? dup dup{save exch}if

% languagelevel2 ONLY code goes here

/Range 0 def
/DataSource 0 def
/val 0 def
/nRange 0 def
/mulRange 0 def
/d0 0 def
/r0 0 def
/di 0 def
/ri 0 def
/a0 0 def
/a1 0 def
/r1 0 def
/r2 0 def
/dx 0 def
/Nsteps 0 def
/sh3tp 0 def
/ymax 0 def
/ymin 0 def
/xmax 0 def
/xmin 0 def

/setupFunEval % funDict -- 	% this calculates and sets up a function dict for evaulation.
{
    begin
	/nRange Range length 2 idiv store
	/mulRange   % precompute the range data needed to map a sample value from the table to a range value
		    % this data looks like [ range0mul range0min range1mul range1min ... rangeN-1mul rangeN-1min ]
	[ 
	    0 1 nRange 1 sub
	    { % index
		    2 mul/nDim2 xd		% 2*dimension# we are dealing with
		    Range nDim2 get		% ymin
		    Range nDim2 1 add get	% ymin ymax 
		    1 index sub			% ymin (ymax-ymin)
						% xmin = 0, xmax = 255 (2^bitspersample - 1)
		    255 div			% ymin (ymax-ymin)/(xmax - xmin)
		    exch			% (ymax-ymin)/(xmax - xmin) ymin
	    }for
	]store
    end
}bd

/FunEval % val1 fundict -> comp1 comp2 ... compN
{
    begin
	% the value passed in is the base index into the table
	nRange mul /val xd	% compute the actual index to the table
				% since there are nRange entries per base index
	0 1 nRange 1 sub
	{
	    dup 2 mul/nDim2 xd % dim
	    val	% base value to use to do our lookup
	    add DataSource exch get %  lookedupval
	    mulRange nDim2 get mul 	% lookedupval*(ymax-ymin)/(xmax-xmin)
	    mulRange nDim2 1 add get % lookedupval*(ymax-ymin)/(xmax-xmin) ymin
	    add % interpolated result
	}for	% comp1 comp2 ... compN
    end
}bd

/max % a b -> max(a, b)
{
	2 copy lt
	{exch pop}{pop}ifelse
}bd

/sh2
{	% emulation of shading type 2. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 x1 y1
	3 index 3 index translate	% origin is now at beginning point of shading
					% x0 y0 x1 y1
	3 -1 roll sub	% x0 x1 y1-y0
	3 1 roll exch 	% y1-y0 x1 x0
	sub				% y1-y0 x1-x0
	2 copy
	dup mul exch dup mul add sqrt	% length of segment between two points
	dup
	scale  
	atan	% atan (dy/dx)
	%dup (rotation angle = )print ==
	rotate		% now line between 0,0 and 1,0 is the line perpendicular to which the axial lines are drawn					
	
	/Function load setupFunEval	% may need to setup function dictionary by calling setupFunEval
	
	% this is now specific to axial shadings. Compute the maximum bounds to fill
	clippath {pathbbox}stopped {0 0 0 0}if newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs
	currentdict/Extend known
	{
		/Extend load 0 get
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			xmin ymin xmin abs ymax ymin sub rectfill
		}if
	}if
	% paint the rects. The sampling frequency is that of our table
	/Nsteps/Function load/Size get 0 get 1 sub store
	/dx 1 Nsteps div store
	gsave
		/di ymax ymin sub store
		/Function load
		% loop Nsteps + 1 times, incrementing the index by 1 each time
		0 1 Nsteps
		{
			1 index FunEval sc
			0 ymin dx di rectfill
			dx 0 translate
		}for
		pop	% pop our function
	grestore	% origin is back to start point
	currentdict/Extend known
	{
		/Extend load 1 get
		{	
			Nsteps/Function load FunEval sc	% last element
			1 ymin xmax 1 sub abs ymax ymin sub rectfill
		}if
	}if
}bd

/shp	% this paints our shape for shading type 3
{	% x1 r1 x0 r0 -
	4 copy

	% fill interior arc
	dup 0 gt{
		0 exch a1 a0 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a0 a1 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill

	% fill exterior arc
	dup 0 gt{
		0 exch a0 a1 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a1 a0 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill
}bd

/calcmaxs
{	% calculate maximum distance vector from origin to corner points
	% of bbox
	xmin dup mul ymin dup mul add sqrt		% (xmin2 + ymin2)
	xmax dup mul ymin dup mul add sqrt		% (xmax2 + ymin2)
	xmin dup mul ymax dup mul add sqrt		% (xmin2 + ymax2)
	xmax dup mul ymax dup mul add sqrt		% (xmax2 + ymax2)
	max max max								% maximum value
}bd

/sh3
{	% emulation of shading type 3. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 r1 x1 y1 r2
	5 index 5 index translate	% origin is now at first circle origin
	3 -1 roll 6 -1 roll sub		% y0 r1 y1 r2 dx
	3 -1 roll 5 -1 roll sub		% r1 r2 dx dy
	2 copy dup mul exch dup mul add sqrt
	/dx xs						% r1 r2 dx dy
	2 copy 0 ne exch 0 ne or
	{
		% r1 r2 dx dy
		exch atan rotate	% we are now rotated so dy is zero and positive values of dx move us as expected
	}{
		pop pop
	}ifelse
	% r1 r2		
	/r2 xs
	/r1 xs
	/Function load 
	dup/Size get 0 get 1 sub	% this is the size of our table minus 1
	/Nsteps xs		% at some point we should optimize this better so NSteps is based on needed steps for the device
	setupFunEval		% may need to setup function dictionary by calling setupFunEval
	% determine the case:
	% case 0: circle1 inside circle2
	% case 1: circle 2 inside circle 1
	% case 2: r1 = r2 
	% case 3: r1 != r2
	dx r2 add r1 lt{
		% circle 2 inside of circle 1
		0 
	}{
		dx r1 add r2 le
		{ % circle 1 inside of circle 2
			1
		}{ % circles don't contain each other
			r1 r2 eq
			{	% equal
				2
			}{ % r1 != r2
				3
			}ifelse		
		}ifelse
	}ifelse
	/sh3tp xs		% sh3tp has the number of our different cases
	clippath {pathbbox}stopped {0 0 0 0}if 
	newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs

	% Arc angle atan( sqrt((dx*dx + dy*dy) - dr*dr), dr)
	dx dup mul r2 r1 sub dup mul sub dup 0 gt
	{
		sqrt r2 r1 sub atan
		/a0 exch 180 exch sub store 
		/a1 a0 neg store 
	}{
		pop
		/a0 0 store
		/a1 360 store		
	}ifelse		

	currentdict/Extend known
	{
		/Extend load 0 get r1 0 gt and	% no need to extend if the radius of the first end is 0
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{	% case 0
					dx 0 r1 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				}
				{	% case 1
					r1 0 gt{0 0 r1 0 360 arc fill}if
				}
				{	% case 2
					% r1 == r2, extend 0
					% r3 = r, x3 = -(abs(minx) + r), x1 = 0
				
					% x(i+1) r(i+1) x(i) r(i) shp
					0 r1 xmin abs r1 add neg r1 shp
				}
				{	% case 3
					% no containment, r1 != r2
				
					r2 r1 gt{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1
						r1 neg r2 r1 sub div dx mul	% this is point of beginning circle
						0	% point of ending circle
						shp	% takes x(i+1) r(i+1) x(i) r(i)
					}{	% the first circle is the bigger of the two
						% we find a circle on our line which is outside the bbox in the
						% negative direction
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1 calcmaxs	% 0 r1 maxs
						dup
						% calculating xs: (-(maxs+r2)*x2)/(x2-(r1-r2))
						r2 add dx mul dx r1 r2 sub sub div
						neg				% maxs xs'
						exch 1 index	% xs' maxs xs'
						abs exch sub
						shp
					}ifelse
				} 
			}sh3tp get exec	% execute the extend at beginning proc for our shading type
		}if
	}if

	% now do the shading
	/d0 0 store
	/r0 r1 store
	/di dx Nsteps div store
	/ri r2 r1 sub Nsteps div store 
	/Function load 
	0 1 Nsteps
	{	% function t(i)
		1 index FunEval sc
		d0 di add r0 ri add d0 r0 shp
		{
		% fill interior arc
		d0 0 r0 a1 a0 arc
		d0 di add 0 r0 ri add a0 a1 arcn
		fill
		
		% fill exterior arc
		d0 0 r0 a0 a1 arc
		d0 di add 0 r0 ri add a1 a0 arcn
		fill
		}pop
		
		% advance to next
		/d0 d0 di add store
		/r0 r0 ri add store
	}for
	pop	% pop our function dict

	% handle Extend
	currentdict/Extend known
	{
		/Extend load 1 get r2 0 gt and	% no need to extend if the radius of the last end is 0
		{	
			Nsteps/Function load FunEval sc	% last element
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{
					dx 0 r2 0 360 arc fill
				} 
				{
					dx 0 r2 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				} 
				{	% r1 == r2, extend 1
					% r3 = r, x3 = (abs(xmax) + r), x1 = dx
					% x(i+1) r(i+1) x(i) r(i) shp
					xmax abs r1 add r1 dx r1 shp
				}	
				{	% no containment, r1 != r2
			
					r2 r1 gt{
						% we find a circle on our line which is outside the bbox in the
						% positive direction
						% x(i+1) r(i+1) x(i) r(i) shp
						calcmaxs dup	% maxs maxs
						% calculating xs: ((maxs+r1)*x2)/(x2-(r2-r1))
						r1 add dx mul dx r2 r1 sub sub div	% maxs xs
						exch 1 index	% xs maxs xs
						exch sub
						dx r2
						shp
					}{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						r1 neg r2 r1 sub div dx mul	% this is point of ending circle
						0		% radius of ending circle
						dx 		% point of starting circle
						r2		% radius of starting circle
						shp
					}ifelse
				}
			}			
			sh3tp get exec	% execute the extend at end proc for our shading type
		}if
	}if
}bd
/sh		% emulation of shfill operator for type 2 and type 3 shadings based on type 0 functions
{	% shadingDict --
	begin
		/ShadingType load dup dup 2 eq exch 3 eq or
		{	% shadingtype
			gsave
				newpath
				/ColorSpace load scs
				currentdict/BBox known
				{
					/BBox load aload pop	% llx lly urx ury
					2 index sub				% llx lly urx ury-lly
					3 index					% llx lly urx ury-lly llx
					3 -1 roll exch sub 
					exch rectclip
				}if
				2 eq
				{sh2}{sh3}ifelse
			grestore
		}{
			% shadingtype
			pop 
			(DEBUG: shading type unimplemented\n)print flush
		}ifelse
	end
}bd

% end of language level 2 ONLY code

{restore}if not dup{save exch}if
% languagelevel3 ONLY code goes here
	L3?{	% we do these loads conditionally or else they will fail on a level 2 printer
		/sh/shfill ld
		/csq/clipsave ld
		/csQ/cliprestore ld
	}if
{restore}if

%currentdict dup maxlength exch length sub (number of extra slots in md = )print == flush	% *** how many entries are free
end
setpacking
% count 0 ne { pstack(***extras on stack during prolog execution***\n)print flush}if	% *** BARK if anything is left on stack
%%EndFile
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 0 0 757 708
%%BeginPageSetup
cg_md begin
bp
sdmtx
%RBIBeginFontSubset: CABENC+HiraginoSans-W7
%!FontType1-1.0: AAAAAH+HiraKakuStdN-W7 001.003%%CreationDate: 1/31/20% Copyright 2020 Apple Inc. and its licensors, all rights reserved.11 dict begin/FontInfo 9 dict dup begin/version (001.003) readonly def/FullName (HiraKakuStdN-W7) readonly def/Weight (SnapShot) readonly def/isFixedPitch false def/UnderlinePosition -75 def/UnderlineThickness 50 defend readonly def/FontName /AAAAAH+HiraKakuStdN-W7 def/PaintType 0 def/FontType 1 def/FontMatrix [0.0010 0 0 0.0010 0 0] readonly def/Encoding 256 array 0 1 255 {1 index exch /.notdef put} forreadonly def/FontBBox {-278 -495 1375 1158} readonly defcurrentdict endcurrentfile eexecD9D66F633B846A989B9974B0179FC6CC4458BB4CB99E3608702C78822367AAF89059868F63F93207640A6BD5DA214789139C491E02A37BF3866F2964E8D690D48D9F6C4A5EC22355F8123573812483E06B968AE84B5F20A982A0E6576475351697AB8C6EA040355C5542F297D7A3AF28AB93EA0771E0D56DBF00F7CA9CE9FB9FC2E0ECB00D04D5F5F3F24B987B546D6274971A477DEE12C44623C180BCDBA21172627610C4736632D1A4693E79719C3BC43DF5330790A52DCD4CF455ACC213F6B1C4BA249179DB360225568161552A16682E3A3604BFC39D571B1F8F18375BEF1B05D6DE4413DDBDB2D936EF6A197BC87EF3384DF04E6025A3A7EFFF451D52E96F6EA0E85A93C768C18C34C97A47D92F4C66B4E718FFFAC67E2A7BB77C8B79E66D95E1FA37AE6EA52D144592740B54EFBC39EA27DF6F936599C77DFA82C98CA4ADAFAD16A200255F4B180C9E33198A4A6AB9BD58D1403E816CC7C375E783E9A612AEAA8897D5A6FD1C76D0BD123B9B210784F7B6E124E02BE27B3B623451F547DCD53EC38F6BC7B5C8050C203E1EA19FF882ED5B3F67CFD6FC1F1AD5082B4A4E328B82E0BB18D76775462C4B3686FC6167480037BBD2085C3DD76F6B2DDFAA428EBEAEF7C23D268B9BC6038CDE903D96DECD55FA844FAD2D48F12106368F2B617DE8EF619B124B09058629B68A9649E8C1B510123DDEAD9D6A98878F841F43A5376EF6118031F464665D43B240C11C5697A83C20C4ABC89BA4728673361CDDC2BEB9805BBCA3D0CC4439F50DC6B53F575321C8BED329108A18A8725961980217AE58A9E72DC72F9DB1F0839111FEBAFFA0832C500704C7CF8531F82D4CA94FCD9A7D1A7CDA9BECAAA6CD17FEAE8F3BFFF22FC26F34C8257821A9F36C689DE9E4B2E7818A3479E4AE43BB284DA8728FB904F2ECE190D9B4F13F26DF239959A1F4E9CFB0E00F69BB6874249E9FD8D61F877C1B45BF0BA18F7B074C9C73AC9B5A29DF0B026D22B2097EA98DFB8841A515CC8E8009364414D2F860795E73F4361F6DF3969BBDDBEB027193BEC57EBA934D0967F6FE75E36CC5937EC1228EBC71F6D2CAC16DCC169CDFAA0CAD2910647EE15DD638EC28472F2536A3B5325C7797E6F342F12C19617F1ED458472E08F6D40EF729D7728120B4DDEDBDF69833479DB89404C7C415CAD90C91754D80243072B6813E29532172A7DC4FA3BD137B90B94F81E384BC3E978FB231B632847E01201E2B602E26D72CE756C42E60DC40EBF4C0064E6A25EB11C9FEC148B8B18DDAE65B8D226D26112C00A4F9B4DD1360913E0D680B612E04F762A084FC196F49F54A079BA2B98159749F9E2C5B5BED88B5FA90D22AF81480374476F385FCC23E6066ADE705346512CAB6B9F3841C521CE93CC3EE38C1AC64F08227507902795AFFD58C2EF692ED6361F8C49A5640BAA03C94E3C53CA9911E98169FE1E11FEE30C5F91302984AADB37641F9CA8DFDCA6698A032EF7FDE6E2228A197A77589DECA76E5830DEF87B5FD344D3DFBF7E4A02EEE2AAFAF5278CF8D4ADEECBB584B03FC4384AE8E392F426DA07589246667988F0F01AA78EFC6B3BEFB1A5D9047D55F6BE0C78696DF09C3F7997F38E6B8A13C74FFEF00F7D01FF63D59EEA6262A8D79DB1681E6F7A6816F3066AA7C2AAB6DAB0FC8987317D83B102EF932D173A7B9DA47A56CB15FA63BEF83B0FE1DB066131272302F345B06159ECBD8375E801866FCF5A3C35602DAAA88CE1575B24A57684D55E159B43724D7B952FE168899785740130AF1ADA4A2A092121CC7B8609E66C6116E373CF9CABD0F37B9F6D93BE7A953D63A21F80BF1FF8B1BED1FCADAB3C2B43AD6048441FA25095195E2A75F898D44C00362CE663EDC8E4E4B16E55AD851F8C93C8708D3118A40E22C268BF93D5233F674B63261B7EB552665C492ED915673F2412B139617E3C72AD36E66ECB103CD0440CCCE270443AF521077B04992093919EB5CA4D4128CBE21B1D9B1449903EB75A8B05809BB885093EAB9CCF985186EC0CAF0D040E589EB50F2F00D946998C8171A7768C267010E8CBDFC0A1792627CA0D39838D19FF63D09095616F32DA1BEDAE0C4A3AA914DB0771E07BB679E32B79BCCA218C5F919F73EBECCBE588AB4901A07DFE3EC1D9881B525A56F1050F01D86803515AD434C7CBEE762B8F2DE95E966379D624CC49F9B7AA7E5B920EB5AD3680043EEDC467BA41A101017E5CFE68035597834B9863905D89B20D6C3C16C8F54274B18F5467638F2652E28284162C3CC99381C47D5EA0AB6C7D2E77B3069EE85C3E3E87C6E228E9216D8D830AE31CE1B18D6DE881F41DC6EAE2601F8E33DB2455281BECF75B8B4556676FEC09C8FAB8132FA7992F8FF257E138C7D1E39D2F64C2D90B96A37B6156A87DDC17F81BF7C51F537E1AA8225F04CC186DE508737C7672516B8BEBBDAB180E7A604476EA8B042CFF7EBD3C5B579F4D914362E73AB2E0C8838B66EB774B5660A410946C8533F9C1B0018E8CF54854C524741055ECE1EE9101B5BA604F0EBF500921B73B976F7D0FE88807EE3AF432A6AA7BD960A4482B834FD2E9E12DFCFA2B247329246E81468F220D0660E503DD185ACE3561130B14DFFD5B59598AF0A0555B6430263E174D6E2610DE527018E12DAD40DBB56429474E6F7103F5F84FBA0B6773CDE74E5D9D6E92D0FC56076EE780E9BE28CD05040E0DAAACD883D4064DF5971445DA26F69C7428AA6AA183D8B7851EBCB37971ECEB4992876B7CA926E9EEC49B0B63CCAC0FF0A43935E7066508AD45603DADD39F53D5C86063852E5B9629A6DE171C3B73DEDD4CA5924F5BA8797B1D083E08052DBBC4BBD02CC233BF8EC87FC41C154B66596291D452DE944DAE7E94D43FFF5059D13FC31B42C90FA5A0EE20B3CD1F01C3C6ACE2ED5896A1CF58BFC177B6AF54B7F096FE15B8F6F8B1F992C86E1A4EA309EFED4221A9F541DEA1138C5C253D589D82EC8B3529B2F3F7890329F2D300B27224DD0AED40554ABEB937EE2682513C732F921AA5FD840669A3BE9B50417028E0A6D1132FE93BC26BA265B21717B352FA77497992FC07394C97188CF15A954FCF05CB95EF7335D02DE8D24544B8442FFBDAF9577D79A57A326392CDAC1E3F57C7CE6A2A7F1E138C6583437A01EEB8CB7EAC5CED5474402639ED435108BF7986969500F46EFC31C4AB80A92A39AEC806CCE3606A2992C00D4E11387A0A6C12B4B32720E70A44B244FACC882805F58C05F0FA307206E507F77654DDDB2B63D9E13F606C00A54C9919530405E119BE8F8E5E5E7C3D7EB471921DD02F7E1FCE0C48CA9E5471CEEF4E1DD083711A05D53CC3A70A26581F8B94BFF68F148625EB79EB0AF9B83E6C1F3DBD799CE540AB9478ACE43733F31FB836565A55143C472C019F55B00F489C3E5BDC8080EE15E2F1B81367EF5F817833E1C7DFB1006010F8425E7EB2B4BCF546EAF042178D9A6A178A70C159B1486AA7C97C0A90385849E6CEF64C702A69A6BD1EDD2D568A95BE288F90FDD4DC92B7A7B756B081CB292D46A728F2FE25D0247F1FF470B27C651716EA6B1ED641D625D6C858323A0311BA3C7EABBD027B876A179145BC6A089144C54EC50EA42EE795E243046ADBD878877A9DA9CD24E72E76E0411F444851DEDF0F1A9DF695F8928170A5A8A42E032F019CFDEBDA07202862E5820B2BEAAB5C222840348B9F0F91C2146B8012FA744167FB5823147E422467E624D8C1082DB5137D2D5A7E4357C3BDE5620E19669BC47ED919972C2B0F30664D928C6820E000914154A8187A042B031D10623E184F30EDE658B2F4BBD1797D0DCE38997802D4A2B6892FB8898ABD9B1FD49B9320FB7995534EF38E591F5ED5B0605E83CDFBD23B7C14461882945E61956597A6B5FFBE9EE833E1D0612264389F42DFA422D50AE02586B3807ABE03EFD48359CFCDCE01C0B4770634A58623BFE70FE4C276C1D50B71B3F2CF2899C71231CA0A86DC68A520C1E4A5BC6CCE603AF9E7BAEBC826226D1CDB82F682C6A311EA565A722662417A700CD53207242796FAF1726B2EE02E572491E97BF6AEFD4947D7FBF9ACDBFFAB68DC668AF46F77B10847B585E383F80601E064B85BF91140FB038567ECB530F9B81371D5B64D95CD8C47532BAEDB73C2DD794B018CD2C007E49191BABAF7CC092C43570F83FF2A6479D57CA6CEDD7F5AEF6C537037FA0780AA9F9871849F357379C3166992F991614A59ECA2CFA096349E7F7775AAB06B3FE9DBDF02BF3BE60E780A4A3346B932695BD40AE7FE7FE7225B375CA5CFA82374595A74E1991BA38D40ED476B843BA4C7D7C639D1B2909D2CD894843A36DFEE256E071C05253FE33C41614F203F822FB22AB8FE17109D189F20B7DF0065BC2AB7B4038A9197D01F3FA136E18ABFE20A2249A58E3F3252D14CB37AC28BF150E7059490AD748855383E332CE8B2B75BBDC571863336C504877D6A2BF1DFB822FE0B3D19480CE39B4CF69C630C977BEB1B6960E1461EB5F5ACD63A0BC7F4453E6634EA2ED2051C132F3C4502AF41F1B79B0009F4E0C6B0D6F13CB7FFBF332272A505C706C744873B7C7C2DCE7B6E2F456D37D64CE36D381009B3E6349F52CB115B82960078E13C1FFB03A86070290232E090D6D36848382B93D2EF68851B2A7BC4A07EDA94965371E7D61926A66B30D2434C7321D04D998E36D0745EC7FE2F9A606B9899AEF352DB6834D5697C29403F1989749DBC42E18822EEF34350772740EF2E3600734DD9B3F6763B255CF7A7D17A4AEF7DB8BC4EF4B0AE124CFDF3ADD54A032EBFA78DF59EEFF02DB2F9A14862A7A98457029CAA5F583888FEA02F60E899E87EDD2BE9FF31FCEC5882FE61554E04435A3DE9EB6F51795BC5CB79B4E7C7784F6933B4EA8A598B03ED2509D46E0B00CB20225A42F490797C09AFF194EDCF9EE6A25C9717A567131800D3B32C5E8B2C89BB60BC737F8BB532606B6ABCED2C58349B4386C2713C3EA1A1CF5FC2D37A03BA854D1F9F49969EC223D23BCFA9DDB2EB0CB4ACBA0FD8BCAEB6EB73B198090928725BE50279CFDCD1DBC30155F2601F1022FA69D9DBCBCCA609F29F4EA67BDA85F09BEA619477B2EA1B7A3FFA7F48FC2DB1931EE13A3BE764B7C75C2A1F91340541D1EA84ED17F944DB02EFFF2F7A897376711A1ABCF60D2E171AC460EE74F223FD17F84DFCEE1229688CC722DE7E22918D91BD697659CE98E11D401A03336392452E45FEE295C37BBC9A983A97AE10C13F6D2191ED8EB9A1DDDB68C15187EFB6EB1A05AFBED4DB55D6F8F5625DCBDFF190D01D90B79554E319662EA824B0673F1FABF7F79D8DAF564DAE737DABBF603B2E8E1BF229464D48AA55AAD0DE0FC79F74FEEE7C8AD1C1FB52DBD4547EFCDC97437E76BFDCA373A8E47AFDB654C6F5F57A1147679B9925E4BC23AEEF6EC0DC9FD36F8483D760C5A42838DB4764F6CFEFAF6243FE01AC52CFF492AF1A914C3DA835D3417C7C2D6F4FF8301676FC99FBDD58B1DAFE655FC421B42D35742DBC62BDDC92330293765E54DBFEC1669036A8B6697442B88F3083189B268802EBF80FBE0CC40483856998CD57B15ADA000E451995AB44D1D8E0498A66A5E7232E6B675A8A14C65F01724FEB64DDA9361F79E4C7ADEEE78F74E6149FB1D690FF8A91F1355C12251CD775DEDB6BB84CADA03655FD73F4AF327845A6AB339F25926C4DEB427AE3EB2CE850089946B3B170A64A226BE025B2F73508AABDB42A038A32AC73AADA654B58970F8E167B9ECB3C566572A1A1920D625A690BF4843EABF46E7E4535FFF910C3A89BE026DABD2BB35723101AA30C7EA72C6CCBE0CA3AD552D5A9574511B955668027C7088F94BCC6FE6E0CCB14323482337767527A2CEB1CDCD6AC3CB0E529B0DCC24C303CC2F55596D7FA3E3034DB6E4F7F5C2DB853A3290E068ACE2707E5D01D15C98E63D7DFE5E2E9C103771ED369EAFAEE2FD19AD7DAC337647BEEF13F40339BB5AE7A2518E7F21ECCDA67CBA40001907FE772330A888AB1F4DCA70B61FA8A525A49FF2607F5ADE54C0023EF2C5BC7DE6A4B98720B3917E2EEEFC4005693ADEBE9D85D38DC6F34D82BCCB6DE1F9FB4A3FF590E28F951B1DA434AB2CEFD2B2FB782AA4F70B60D84801C70B055CDC306D6943DF2C4C29D26D5B2AA94663DFFB683C3290CA6435104E3DB5F7B1BCD51F78A616519CA433330A3DB6C43EF388186A1E6F79142EB9F03D14CEC7CFB59EDCB4EC45D95C77F097A7801C060245C365FB3CA8E34E922CFB609AB6E7D17A24C19C2C93444E2A9431AA07B69AE69F1249A032E8BDFE50E485B5D5407C6EF33C59AA2DC22F8634D1A3424AB6814525259157D52107C9BA4086283BA73131C7911F6DE60FC1D3F221B88F303A4216F3867CD56A573BF34D1D4258701A2E58528D7605F53878376A38DF7DEEC4FAD80462975A3D1723F44C125E4BA49F5FDF0A6F665BF224EEEF30515F60A426B81E2146ACC27D95D00D0B28443585E6D30D9C423039CF233BAEA904C5B83F9345AB5B496B3EE8CFA4551D10CC6A2EEC997B8BC70C08EE57A1BBAE22C67B4B9F34BFB3ABE81E2D3BB4D071B043060D773FC4CBB04B466B31274E89042CF892C6B24BFF3128FB9CEFB0ACBB937F4AF376DB91F7E3D92FF3122CD27BEFCFC94B1B84C8432B56D1927BC0D11A39FFA63C83998D37DCA98EBD9CE5DCF49FBCBD068D1FB2C878082F78EE9AD8291FADFEEEF0E3AC4388F8787B28F1A50CA5C0252B775B006420BB89FDD7B026DA3C13806F1FE3693D1FE0137BFD24EE47C8DF5F18B73B1BDF1F6EAD8AA6FE9C38A79E52C93D7934F25864842CFC4C7C4EA95E449297C9A00ECA2AD06C8850CA6EA94AD2D22CA3238833B7FAEBA9F059FF945FCF5A53B6485A8FB833B5A850B9AA1E60F029ED465129860D85CC196C1B6C55CA12BB41B07B08B419BA4DD68044E969FB647BC321038DC3E81B0FD8B31441CACD3438F0FC06C050712B3F8C0C385A226BD668E8B99800D32A2DB883E1963F6202A0B8D73A43D9547F438EC6F9E4F78A6368332DA59F5A3709C0D47A0DF10ACF8CD8A7E48CB8FC7B083DE1CC33FD70A8AC3C50E188BF3036F75D4860FBFC0209A3A607909A7466703CA32D6008E5925EBA22C9A2D74DBF1BF9D3244A02C0A5959EB264E35A5A56C0CDD0ADCE81F2B7060C74A111676BC3E5313A7E119DCF84BF6BFFDAC4285E303CF9992696C82A2F68E054B73533A6422F15D6CACA901FF74940F402EC7B2DDE61B08459ED2A4F1B520E09F134D01F664A129371B1D60D77CECE33B7A2095A626E9C7AA2F958667CAF676D7E8F1B681D35CC11CF2553DCAAEAD3F16438CB5EDDBADEB937FEF771337C35141FC1D4333EC74F00D804527BDA7A46A03CA41A67745A3F9AC7BC232FCA5534E7E001B214C4C877774EE03F0A8D9D6640A3628AFBED27C7E7220E80EFD824676DEA89384B24729942B972C9826644278FB1C1BDA07202862E5820B2BEAAB5C222840348B9F0F91C2146B8012FA7445D0CB1B6CB5C5CE010ADF815D22E15D749CBE813C94FFD60B7B8CB7D0BCB9B515DDCEF87E8A1DB051B5FE6DDF80E3A9B9A5024E8E33C0BBD654DA2005BE8AECA2205DDD0FE1B80CAC55E14C6284B585DAC344BD5D7FD1EED17F830F31F3A70A6F03C34A458F11242987BB99BAC6A723D3A33534CC7A15E7F460EB3DC575691D5C9362A214FE18BC20C736CAFB3247AAC661AEBDAA7848FD306B26AA40F1357C2D3AB9E802947E26F2EA4A06A8A6DAFE8BA0ACAA7B794C1411E838B258D924B758931AA7E07CBCCE0B4CAA006F6FC4517567494B5317B2E70B3D7A14CB03A58F34763782358607FF8B69F23C8B21C76E17A40C4AA2BA5B8C055886DE1E543778DBF9399CC24597EFEAF2F004ADDEBF476F0E000216CBCEE29FD7948630E7BA64284382FF4458A9161D50E8F3FABC5468D1D527F338C564B6640D0F3A40D1739C373230A6AF76D76C26AA0227FA72FED69FA463C32CC02E752D9EE6F5D45C73C3B6B47E45FCEBB8274BDE5E26E61BF7DD5AD3D62AFCAD2064E36AB49D0682595AB8EAFBC8C8B79D5012703B1FF920F54F00B0916DD7419D062D4565C55591768ED13F0BD275E2BDC5BBFFED535D85758D517C05966BE56942D20BAE2288542833D72839FA9BE7D7A07B7B4BBD1AC9FBB860B14B55EED009F745BE4209460712A3BFB831C3C53C378B4A1817C29462A4B146E164A7121A752B00C5A00AB870525FFF571ADE544DFAA2145B263578E125CDC51FEFED6EA404384CB70707F4F8FE36DC3A69A333A1826283F54AB25FE84C2DAE08E3664B755B5883AD2A11E88E1178FD39A8CBBDE6C58A8FA419F310AB8BD06D060885B5CEC608B12CB747FF301150AC50D49F6DB21624BF5B40B5792C595FE5C171DFC9DCEAA57C503C318626A20B1EC9F013EF92042439A996B4682FC510DA3D94699E2C1B99B7802F314BE0FA8E18FD7D13431DE441E0D14AD56DFC3368D62AABBA3086809D7916B614E1738B6DAF4CEEFBB8E3C54D4B68F0ADF4A642B25A5FC0F0076096A7D6E2E13752C5DCC8DBA94A92A41EEE58BF0525C778DA144D3D310362596AFF6DF524024EF5A3647CF9A36666D361B487F0A39CB4C2E614DB1138C7F3EAF8CFEF5ECC122BC24BD34E1BEFBEC6B54168C3243E911E8BE9F15504BC74EE540180BAD97FAE7812D2470958CBE09BB790052AA2E85C15A984D6A9FB052B37EF4C143D12B1E3DDCD45768B4666D275A732BE4AD47CCF902022DD2F6D52D4AD304D77EEF5281B52A521747766052C6905555288ECD5D3B1BA2BF801ED7C8163FC5A35FF9FBD25FF4A9594582658B41A16482230D00B253C05ACEA5207D2151BB47B539AD013F03AA0B6935425EFE41D20275A52E66430E704F05ED34F2D15FEF99F8454AF73CA4CC00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000cleartomark%!FontType1-1.0: AAAAAI+HiraKakuStdN-W7 001.003%%CreationDate: 1/31/20% Copyright 2020 Apple Inc. and its licensors, all rights reserved.11 dict begin/FontInfo 9 dict dup begin/version (001.003) readonly def/FullName (HiraKakuStdN-W7) readonly def/Weight (SnapShot) readonly def/isFixedPitch false def/UnderlinePosition -75 def/UnderlineThickness 50 defend readonly def/FontName /AAAAAI+HiraKakuStdN-W7 def/PaintType 0 def/FontType 1 def/FontMatrix [0.0010 0 0 0.0010 0 0] readonly def/Encoding 256 array 0 1 255 {1 index exch /.notdef put} fordup 0 /uni0047.40 putdup 1 /uni0053.52 putreadonly def/FontBBox {-278 -495 1375 1158} readonly defcurrentdict endcurrentfile eexecD9D66F633B846A989B9974B0179FC6CC4458BB4CB99E3608702C78822367AAF89059868F63F93207640A6BD5DA214789139C491E02A37BF3866F2964E8D690D48D9F6C4A5EC22355F8123573812483E06B968AE84B5F20A982A0E6576475351697AB8C6EA040355C5542F297D7A3AF28AB93EA0771E0D56DBF00F7CA9CE9FB9FC2E0ECB00D04D5F5F3F24B987B546D6274971A477DEE12C44623C180BCDBA21172627610C4736632D1A4693E79719C3BC43DF5330790A52DCD4CF455ACC213F6B1C4BA249179DB360225568161552A16682E3A3604BFC39D571B1F8F18375BEF1B05D6DE4413DDBDB2D936EF6A197BC87EF3384DF04E6025A3A7EFFF451D52E96F6EA0E85A93C768C18C34C97A47D92F4C66B4E718FFFAC67E2A7BB77C8B79E66D95E1FA37AE6EA52D144592740B54EFBC39EA27DF6F936599C77DFA82C98CA4ADAFAD16A20025518C1BDCBA0188222D0BD8ED5798723D4ADD91202B98BEFFBB1954353FBC0AD44A95DC3004FC3C2495CCB782EC6016CEE94068CEEFFA5BEFB1C9CF0EBA6538B9A6BCE4F317C25A643923ECD8102A02067FC4330C980064CF48C75BDA68F29B1FAD14B50A3CB6A4B45491C12D2323E72FC17780A0B19CEC3E676C2280D0B800D6D7DBBFBAC6D39FB4C54448E590420E040906B00DDB41B167CB422AD920F77354A119B365F43C0FDB4C6B397963464E910080D87823927925D8D1328421884670B2E5F8C0A223A061A42B7731C62852F797D6C5D90ACA09F254CDF14415EAA23DB25F44F119567F91CAA422538E2BA67D5600F3B9401048D9A952B9F2A0010E71C85269C402780794269F41A197B3472C7EF275465D540BCF80E121B21463E9D7511BEBB96D5F8C393D88844C1E1F112612D95CEEB052DF84A6AF2E75570F9E93DE18EF9C8939083F54E672BF7969C722C336768BB89B344E6470E5FC1EB376340C3AEAE083F997028F13A1F33849C9285F6B0C70ACA4B6BB69B9179AD77599BDE548E3154CD915CB2034504785D2008507172E5BB9F9976952684889C66BE118A8C5A2C8CC573C9B272B7388E660E96EA4345D6C0684C4BF3CB08A452FAF5FE8B6C15E6171D58E5DE04B19AE799B6C9AAE787393084311EEF179049AE3456C1D731B47B09B86CF0786356599BD6C7BF50EA7F426BC536BB2F100632FAAFFDFC786DDF372A49D17E373D02079BEEF4D076BF58F49DEA36F20428A42C90513B31612E19615591D315DE9C9FDBF8CA5BE008916814649E5DAB602BCCA8CAD56711A685BE694159E4310B8E7246E8722F17175673726093625D0C2576A7DBDB7AD3B0F93D17EF5B7880C9A07B50426254997E6B345EAFAE9F5D472139B5B43F4477C431984FF1992E205AAD4AD9D048B635EA74B82499F90B4149F6EABD49658FE1CCF64FA6306E0527D10DCC68851A4E95CAD625DAC47235EF5357E5BE16D8114A84F323B43AED184AC9895478D00A006185AB30F1CC512CAA3209F1582E916DE61AD569C2B972B458719697B30A8FC4D3D0EBEC555B02E50AA4D90D71972138FE6778D5E1B9E848A53D2473A0BA695CA381029AD7F07AB4F6626DA44C088E71002E1B72311AEF057A58DF5F7EA5A6B88C8B840E607B9F542E25A3D69183C283C88F30C45B2130984AA988A541B329E6BDFBC5ACA13900C0655DDC006CD043C20174F818F62D751B17032A2B5BFC1C4D8D8C06FC45F4485D6C5969DAFEF7FFBED273781A822DD3F989845BC250C2784D821C091F9EE272F184CB4A025BB4A077FC20488A6328630CAD2646F652212A57160E1A1E469E5F8E9472EB78AF9EE2C1C5355A3BEA8710C405884A730531298D82E6AE9599E446E606EB16B30923ABB76B6EAE6F60AE78CD93190B05A0D3EE05098FA14F2325F27C6D021DB3074ACF0D3C09349A422292FEEB52B3ACAD94FA1E2B3102F26D77910BC242C7C7F59F645BFA1F2725D38E8D03B3074AD2CFD67AE102BD3659380F328BF752F8A6F5CBC72F5394D6571ADE62F076CF4C4F0D1E8D90A301CE2578000C80264100B2ADF0ABDC24DEAA649EE48A49B231CEBA78A7EAF26F5DAC80CED81AFA215CB5200CAD59C4DD24B2B58BA3B2D6240D53E9041FBC03CEFCAC5D535E5F3689DE6948BDDB7D387ABE72784886312D3C673F2432E8E654C3F8196C3B489CF7C0676CE23FFB14D1A3D434D5E9ABA83DF11D15D5E68E0A0BA8C97F533BE4632966750AE5B69AAEAF87D4BF9B9C60D834C7B8DC2C0DD655C20F0349B829E8A5FAB482F80EB4A143009961171C8AC1105910A5791CB07C0CBD8C2F930FEF37EE9955C496DFB0E50C8045F0BAE0DAF4FC8E35C52366D427846EDEC91E1159C98D47175B49673975964950B5EBC6DDCF56EC299E9A61D8D37E69BE524AFEB30AC43C12546683E52267019FFB66E396878678DF565A1FA451DF817589DC52C71979EDADFD6EA88707408345D0ACA2507B36F9000CCFDF21D4AA1C813EFDD1FCFEBE5FE83410545782EBB5D34C5AE053BED0B48701A3AA72CB75E6FF59D5E5B256C4279FC8E1A31B86022B1406A861E75B59C93349F60DE6AD90904EF0E00640019802BE4EF7193FEE82B9D57CD50A3CF13CF2BA4208A41F483A2C9BBFFFDF155CE9113C77636AFE995EA3EE404FC3EA3FFCEAF395B46FB4C6B5438A0294EBCB75A57CF24FC51A4E5736D63EC805AEC06F06D95B22AEA6628BC568D4764DF98372D6612526939B0605D8B30C5BA5AA0CFB2A23BA3F0106233D4109FDD7AA5B60AED0C3D055CDDF653FAB8010ADF46A3EC17A3F7287EE225BA1DF10412E7E8E8261C0AA649E575942A93FAC83D4D880E16892223D033A8468966EA9CB0317AEE785746B75B46ABF2C1AB28059827DC604703BD8290085F18CF46052A9CB6F782DCCB969C206DF434C849444A294C027059B12918B75D3D7E844E8DD16014E4E156B461E6E33AF474745DAE59536F01204C78EF203AD67D0B19274900F3F8DBAFA42B656C1A0F4443229458E69EE99A06F3021CA2FE3527AE09699D2B72D5E0BCA141D90850A815B15F8436D2C671EAB429FF914E1FF3BC2869AAE6FD54B196A7E3157C20CD14EC23C8A62F467A91407D57A96D6012FDD60DA1EED45776B8733591C90C17B0F7B035ABCEFE7C36973A50A83FE0EACD95D7FB762033DBA41E24AF0CBD026507B1ED298823FEE08F87B68AA6CFDCBAFF144BEF8956385FF0A95E72762149A0048FE8CE9E6DFF8B50C4BC629456CBFD8B12529CF1B4BF7F2347D4B619B2D758E4B14F6AFD94F800A61F753022306F6F0621CA81E06CA10722D6316F7E7B413816B9E8F5579B36405B141C1841FDFFFA0C7F81CD4FDD67F3321DC504A84AF8BA6746BCB8CB9785952D2E8F9EBFD95B23D4CE5EF45CE6AC430C8766DF1DF4AD4F3CAFED12E980ECD4DAA188761C2D6E9972D2B5973E5A5E8B81DE049121EF8AE28078F2AD240ED9E81FF40F7EEB0CC33B72A54BFCE785F801D40F73DC529E6DEBF94BB4045F5B5E4D22CC00007BE63B948F36518196012D11E50F07EFF368B2E40C2B16FDB822CBA8C725D3D583A834823C666FCA503EE34FAF477DA0B5A725AB1C2792DE22491A34DB0724D521D667B2015C33F52D2B16FEA4B87D612B816E778109BB65C7AC6D47382D62D3ED5A8B06D261592A8ACF894243AB90AFCE663399A1B75553E519ABD2F996DC97ADF2FF241339CD47B3978909A736D284FDCA92FBB70757CA05AB37B7D1AA29F73359F6F659BA1733587265F6038D63B107AB300FEA991ADD6195BB5A6D9853A89F3EE18C68D13AF8DAD81D54B708248A1E1FD220FDF6DBC85BF0326F1B1747E1A61E5FFF16EBEEDFDEE2FF26357BC975168100AFB54BBCEDC83EBBA882017D59DE52DE04BF5238156F4B680A083617C36050A5182E9E204DB87842CA276034EDCFAEEEE8F5F95BD1BEDDAA68FAE9F277DC9C02B8F1391DD6E9CC9B49229C105E559795338B113758E4E6BDDE4060D7AB6920522571B6C443F32D4E036E9C6780BC9C9234278241D0AA5A624CFC21447E63CF54389C1C1B79E4937E10B8D89873E56B9C91955E31044EA8189C187E9EE8E290BCDC39879371FB4A9FC7445FEDC1E02CBC4A8986F12A3DFD7FF6C1DCD8CD2C892FD371000184C2FFB47D37953B63E3097CFEDA12674BDC62A227D02D3EAC82E6D63806F3B66AD058962261C15CAA74845546CCDDFF4BFFD06AA9C497BEAA8F3A63642A1E82D0B7F23D7B83899146A2AE0F9119A4B06A1D55816B1CD84A721F20F52C6E867F69125C7DE192779F0A39BDB3E10B0C3383452E3679063BA22E06DD92143A85391B30DBD08193BF3440FF9C8AE199F73549E90348A9704AE23243B7214DA8548E7A2A29163C3D697D7F2D51F5D3A46CA9B45B5B2FFA34FD84ED5E9F79AA3598CE3BA1A8C81AC16FC70947AEDF0DDA4DA9255A8813E56A7888209B80FD389B26F69B6D456EF3CC44B9AEA9B4E78B1B9E33B266B2F91B9B098A2DADD94D592B231717358E0419CC993B5420163E12347944A62728F8DCD1B7A4EF4C2F0E50F69E5159D27ACD0AB98241E6DC19815095994EBB59E8ED0D6BD8A3EDF63C711B5F6374D65F48D15D556F04C9263B5BCDFF83A616B77DCA2A4352767C89DDFCC0AC97559ED13F09A334D808FFCEF4182DD5DC50F7446351E11BC8F7A1525275E6DD6F1ACECF257AD729B940C41D14BE2A91C90FCC8D8583550B155F0931FB6EB0B56702BA76588C97648DC773855616301F0BA262BAD38262A8ACAB3CDF2CB915641E29EE3D31E3A4DFAC74504FC4600FABE139B2A8BF8140D282683D3979E1A96050695A09B0580DD2F34CE9FABD00BF5CADE565568E3961DADE8E460CD2BF6C995EB586CE97BC7C50FFD524EA1FA356275F6147E8FEF53448A861408986EF9DD2BE443C9A146C4BE20AEB1E455B83E21CFD386992541B192266DC671363BB8B827418EF931162C2893160403D0F9C14E570AA40D3A7AB670EA2A011153F3BE2D7E8D3A58C4806C54F28F483213A406FA427D5FE346DC2DC4BAFB09DD3876C2EB1F5961F9773D8CCA16CC265960D85E2606C5092186468BB8D6594A5DECF7028F54E332DB9F3FB27B77D835DAAAF759718B479E1AFDD1DB114912746701637A0607D676F9E747682D5EA365A67C1473635911CDB7F5C9F3FD70FF05B115F022A1A1F17AD659568737FBF2724E8DBF1D1FD54A5F6634626FD33272F3390E86F5335E9B3513511358EA3A75E38D8F3AA447AC71B674625D77A3095110554CB8561D5AE4D015863CD32B84CAFEC4548E494E6BC397379E2DC26E13D342B82DEE7693C77ECBA9B7421BDE1ABC7D54145D22DEDE3C8E17786AAF9A6688FCF90B61079E8331C62CFB8C06E0F2CE0C15401E960C9FBD0C8ED7C3D793E26990430C7D627F3C87BBEA49CF5E5A7E61316B9AB232249D761ACE1EB6E80D1FA383012BEA5DB62C01C3E73A5821370C85CE14ECE2388818718A0D60A5B357883D12FF9256702D033FE78154E7670C4667BB8B39D7CC85F885E0DDC8921BB58FD8BFF8160ADDD7AAE3876AC94E3AA6EFC66AFDEC777E560340AAD07642972D05317530BD807A9DCC45F41981333E2D525EDF82E08591B60A96F22D6C206DC9117C31315F2A3571EED0BB7C7288A807BE8C88012B83FF19C6027190F9C16EF2EFA8797EDD26BF466A12A337DA1371AEC75B56FA769B6ABF11A5989958605664C6DBAECD60609A54D6E411059923C16D74D34FD600706A5603C69D8AB455FD8EB9D4C7E68FD6801A9BBF13A01519D52303C865AE9793A784B5C5CAFB3F97EDFE57BFF56EEDB8C0FE0AB21299342670D6F0C0E189985C49999AB55350BE4246C0E8E599B40DCD4B7440DF381F1DDE82CD0CE7DEBB0E1104EAE1F821F78F63C904BFED166A7A0AAB89F3298CE8F84B3AC1D9D19F91D1252DFFA5BDD7CB35BA6C0FDB6A5425829A47BE532BC6785A7F153F5EC4920D1549ADD3F705BFD4A720D35617CF39A191A4ADB3CB65DF2F4FEB4497446DB68CFCDA2D1674F03A627DCE1769B00D66BC77540F23282DAA479F0D1802C4224385E66312E44B85F078E733D6C13B9913D135E947E64A6C18A51B4899943A30D2D175BE74B8035A6224F9C99FD2529B43E19E14E7FD4008F447DC8A0ECBA72AAC0ACC87B5DF99119FEB3D5772F8A9661896D0C39FA729437D0395DDD9F1B1CAD725B75D84C83FE07194F7D1336E97F2446B9E9BADBFD8827DEC41E93CCA18D02A2A1ADED44CD23C653688F7C8510E26FE71263A2E20ECA91EB7EEBE02B967290191072B9CE24B032013CD5055EBB41B911CD140ED125C2CF76D8D192CE1DDCF004DD3C22D1BE7E2D39DC7535ADF2FF76F30C92D4142040BE196DE695C26CBF372421EA081606EF716DE049EB33EB8FC599E0D870ABA45EC97961EF255832E531D92DD7A25917018D906F2D9C08E7C4BE2994BE9515145D4A9D8E0ACFB8873DD39D34DC9548570CD24625542F235D46A0A16C06993E2E8EB672F35D43E8B74F3910346D0E48AF707AE9E7A1A7A673C9DDB439A24F833501FC986D01F9928352C2230D146708A8AC1D9F11E57886A55F16CDA647E538D55A708C440DC9BB20FAB9688CD605418708B4DC008D60B17B499CA090D7928F6A271413D6992EDF5A55216BDDA855EC3D887BB7BE0F0F9B9516A2990F58990135EF3B8FDF1BE80A46F309BDCCAFDE4733342B3F1D64677AFD15E9385D620D63A15BA2B75B5C906906E00699111C5D7875CC7953A6AE64229F5C53F4ACEAC0931726AE1A3CD4E6A999789B2EDD12EE82ECE29E74DABB8EB25845CA6090411170AB04D180A4552939428AD4CB05D1706C4F2E4DF2C6E205B60907E2A864AB54715AB43F8B0FBED25B656AD1232014D25D616E5534F63993B49623D8995431AD66A82991B9460A5BC1B3CA5F33D57CF442E7904CF7BED66A26FC542E67328E172FCCE0DCCB06A16B944DE443DD740CD8E1B9A84ECEE02D315F4433C08B997164658FB204CDA97FDDB002505E07F9631A5A90DEC27678DB49962F9B21E701EF7F623522C8051F1FC21AE357F00C0E7582DA25930EF0B9D4E88A4A6BCA622C5E3345CDDF26A72550E7DAF7C86EB88AD56E15CEBDE34893850AFF979FDC376608DCFCDE55B5D84339C249CFBEE91FC600881CF12F682883BEE9346BAF64E8336001B1B75E8C6DF3FCB2A94DE0BF9D03DA6A7F82DF183B86EE6CEEC0A156E19855434988F7067AEAC8A924A2F1E089D3996451704B6DC3D7E5B62B577E2959DD905D08D9C5C7318B963E3F5E38112193D86B6EDA314C859586DFC16A627488E01E5E612E3078CBABF867F0740D53B844B6C09F0BA6EA55AAC4D19F92191EFA91AFE4DD1EE7D8FEC8EF4B7A13F530C20FEDBD287A57075293BD2F1E3CD7011A1A857CCDD06C485F5918E24DBB6E477363B434B3DA119F66C84ED66A248EC2EAE5F85636D6FC64ED0CBEEA9916AC4EE8038F5287616FD68A67EE7D324AE9C4B05B954E282173AD4E3799977BF32D23DFF48D488823C76603E05DF558DE16084DB9EAF4E240F9875D219AFE3BB53D90759A1B044A6CC449C0EE986A6DC158DF577249F7A1D86194C55C096942960519FD8502CF8FC16B80B3D05CC92C0AB5AC71530AFC8C995349E83CD0C5CEA4E5B3FB4733525D40E6C08EBD7035EDB93D884ED8F6A97CE0A1789F79755362497FCC62755F8322012C50E14BBC2C4C7AED7ECE7772D93A9D342077ED83EBD4072B2C2F3F5CD1B6E12D07BA969BF0999585AF568ECCE6279811184BFBB774948B2E1EDB3CE1269D61C55CB388754AFF976128C37D2BB83B685AAA941CDB993160224B934E3CDCB1502499BAB8475CCCFCB655E51293B1C0D6DE7B0DFE870D6AD11495D8012734B480C196C6A2793408CB8DE528DCD78713FE16F014E7F2D1F3936E3E2C949D8D80AF4D2956BDE9B0CA76FD39B98972E7405B9E86DDFCE3516816773B0667DEC25B1ACD6FA0FA144D7C6B3CD7E2FB3938E95A13D19D25995A45A89265D78AF861F0587346E201DF46894AB48CFC6E2E6A8FB948F6BBBE0EFB68B11F85E4B5F4749AB2DA2755588F6E4C5B8B90494DF8998D5B8AE5DB2F16D8F6395461FC782130B3DDEFECB6A7F80CE3E295220909BCDE6B8E45CC739C29EA6B96662BDDCBBCF46FBA30A15F33344AE1A09F4ECCEA9836AFD4E0DB1F68281460A76435758F2DC5C97E84D64474E30465AE2A12681FC68FC464E115504C7A725889284D62BC92AA8076B44E5A7F251241B4696A662F091CFB2CB3BC136D0AAA7AF14D1B5101E14967F96B6816C5B0312BB98FB8FF4B6F69F1B4BBF443E9F8D7E1C43B38BCF6C5D6C004776C952552DE52B0CC536C8D96F02FBC491E38BEA6B454A70372A57484493390C4F4A34A09D4E0CFE41C97FF5F6DCE124AC4C88D6AA994D5AE42779E062948D43C1245939F1AE7D9BD593D313A774BF0CD747D99B18708F2CC40AAD807ACC6877F3E819917E2A736960E01E6F989AA3D854074781127B690872008E871F0FD8231D2185420F3E99DB457CF484717D2B430C483CC17688E91D6D1EFD43C45FF5B4B2ED939242C27C798CC7116CA7F89C3EF3CF37F98D8669B7CF6A892BF9384AC5B604528C4A3AE0801B35A63B08FC562FD428680EFEDCCA3C2B1DBEE076D67CB80116AFC4E4D4495356E760AABBC5E42804A1FC756A9136B4D2E790C7EFEE8D8B2DCCE29D779140D281A80C79026B83D1377E1D5BCA5FE767A69B6FAB18F365A9364098F4C9469291F4C64FEE74649AAF64692AEDB07DDE6E0E16526F3824A30F708B494349137AA8D81F41532BD972DFE59584E5CA87137C7D07BA3E581BE9805C25ED93EB685A7411A8B5009A35032798F844389521EA02E86A25951BB5E8DD9E7073F1B1161EC5F9688C44E915E47CD207A85FE9D9FCCA0D69A90C023B4082F177637939D5D80BE6ACE021D100BC11BF7DA4351C29A654E20AC808B5C1B0F260B3175CF03ECAB5506FCD89D9AE5E37DE88B354326E5AB49A4DA8007E7601A0A7A04A647A9F331CD7EFA52843CA29B55BB99CD69F275E51CDD2C80E628D0D450F98D433F6987F79E1FFDD5CC09247640940F249ADFA21C7B9E1D69467AEE19325D98D1C7EF6AB3D43EB37613ACF789423869944B60E31E66CD6FC7DF29D7B1A5ED79AC52303A01CE5DC072338501FFA483F66FA3E2C41C736FDCC0217A9BFCE04C72AFE457787AC15636157B116122642CCAED86538101AB9463CFD3B113C3930893F450B5D1BAC3BEE1CD7D7D617901D2CBD77DF05A46A165D5C651453E4350A21ACE901F027097529BFAB74DD876AE5FBC023D7C15BC046055B2F711343D117B93ADE8F37A4BD5E98D60EBE8C1423C5CF34CE0E74FFF661F0E559797F1A594BABF476FFF54A1B21C8F2257F431EBDF24378211E072D260529403C8B19748A63693448472FC66C03A738B4AE71B4700000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000cleartomark%!FontType3-1.0: CABENC+HiraginoSans-W719 dict dup begin/FontType 3 def/FontMatrix matrix def/FontBBox {0 0 0 0} readonly def/PaintType 0 def/StrokeWidth 0 def/BuildGlyph{save 3 1 roll1 index dupbegin/ShowProc get 3 1 roll1 index /CharProcs get exch get exec7 -1 roll execendrestore} bind def/BuildChar{1 index /Encoding get exch get1 index /BuildGlyph get exec} bind def/$SP{3 -1 roll dup /SetupSubFont get execdup setfontexch 0 0 2 index stringwidth} bind def/$SPW{4 -1 roll dup /SetupSubFont get execdup setfont3 1 roll 0 0 0 4 2 roll} bind def/$SPTW{5 -1 roll dup /SetupSubFont get execdup setfont4 1 roll neg  0 3 -1 roll 0} bind def/$RP{6 -1 roll dup /SetupSubFont get execdup setfont 5 1 rolltranslate -90 rotate 0 0 0 4 2 roll} bind def/SetupSubFont{dup /PaintType get 1 index /StrokeWidth get3 -1 roll /$SubFontArray get 4 1 roll3 index 3 index getdup /PaintType known{dup /PaintType get}{0}ifelse1 index /StrokeWidth known{1 index /StrokeWidth get}{0}ifelse3 index ne exch 4 index ne or{dup length 2 add dict begin{1 index /FID eq {pop pop}{def}ifelse}forall/StrokeWidth exch def/PaintType exch defcurrentdict enddup /CIDFontName known{/Anonymous exch /CIDFont defineresource}{/Anonymous exch definefont}ifelsedup 4 1 roll put}{ pop pop pop get}ifelse} bind def/ShowProc{systemdict /rectfill known{0 setcachelimit}if6 -1 roll dup /FontMatrix get exch /FontBBox get aload pop4 index transform 4 2 roll5 -1 roll transform 4 2 rollsetcachedevicemoveto dup type /stringtype eq {show}{glyphshow} ifelse} bind def/FontInfo 4 dict dup begin/Registry (Adobe/) def/Ordering (Japan1/) def/Supplement 7 defend readonly def/FontName /CABENC+HiraginoSans-W7 def/Encoding 256 array 0 1 255 {1 index exch /.notdef put} fordup 33 /uni0053.52 putdup 34 /uni0047.40 putreadonly def/$SubFontArray [/AAAAAH+HiraKakuStdN-W7 findfont /AAAAAI+HiraKakuStdN-W7 findfont ] def/CharProcs 4 dictdup /uniFFFD.0 {(\000) 0 $SP} 2 index /.notdef 2 index put putdup /uni0047.40 {(\000) 1 $SP} putdup /uni0053.52 {(\001) 1 $SP} put def end dup /FontName get exch definefont pop%RBIEndFontSubset
/CABENC+HiraginoSans-W7 cguidfix
/F1.1/CABENC+HiraginoSans-W7 renmfont
[ /CIEBasedABC 4 dict dup begin 
/WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeABC [ 
{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 
] def 
/MatrixABC [ 0.4124 0.2126 0.0193 0.3576 0.7151 0.1192 0.1805 0.0722 0.9508 ] def 
/RangeLMN [ 0.0 0.9505 0.0 1.0000 0.0 1.0891 ] def 
end ] /Cs1 exch/ColorSpace dr pop
%%EndPageSetup
3 w
2 J
0.60000002 i
/Cs1 SC
0.59200001 0.59200001 0.59200001 sc
q
0 0 757 708 rc
1 0 0 -1 85 669 cm
0.5 0.25 m
598.5 0.25 l
S
1 0 0 -1 85 98 cm
0.5 0.25 m
598.5 0.25 l
S
1 0 0 -1 651 700 cm
0.20833333 0.5 m
0.20833333 651.25 l
S
1 0 0 -1 114 700 cm
0.20833333 0.5 m
0.20833333 651.25 l
S
12 w
1 0.83394796 0.29048297 sc
1 0 0 -1 8.5 632.5 cm
0 0 m
84.105919 27.704491 167.27258 57.037823 249.5 88 c
288.15887 102.55674 275.19772 83.39061 324 122 c
372.80228 160.60939 373.11401 153.0276 407.5 213 c
441.88599 272.97238 425.59415 286.8981 451 343.5 c
476.40585 400.1019 465.83862 402.1619 515 452.5 c
547.77423 486.05875 589.1076 513.89209 639 536 c
705.5 590 l
S
1 w
0.59200001 0.59200001 0.59200001 sc
1 0 0 -1 284 537 cm
-0.5 -0.5 m
1 1 l
S
11 w
1 0.83529413 0.29019609 sc
1 0 0 -1 277.5 541.4574 cm
0 0.95739937 m
33 0.95739937 l
78 0.95739937 l
99.70459 -0.31913313 117.53793 -0.31913313 131.5 0.95739937 c
146.70459 2.3475335 158.03793 5.0142002 165.5 8.9573994 c
266 56.957397 l
277.43073 65.288155 295.59738 71.788155 320.5 76.457397 c
330.26404 78.288155 346.76404 78.288155 370 76.457397 c
446.5 56.957397 l
S
Q
0.13333334 0.30588236 1 sc
q
42.5 574 m
65.972099 574 85 593.02789 85 616.5 c
85 639.97211 65.972099 659 42.5 659 c
19.027899 659 0 639.97211 0 616.5 c
0 593.02789 19.027899 574 42.5 574 c
h
W*
0 0 757 708 rc
-5 664 m
90 664 l
90 569 l
-5 569 l
h
f
Q
1 1 1 sc
q
0 0 757 708 rc
1 0 0 -1 20 644 cm
/F1.1[ 60 0 0 -60 0 0]sf
0.20915151 53 m
(!)s
Q
0.13333334 0.30588236 1 sc
q
714.5 0 m
737.97211 0 757 19.027899 757 42.5 c
757 65.972099 737.97211 85 714.5 85 c
691.02789 85 672 65.972099 672 42.5 c
672 19.027899 691.02789 0 714.5 0 c
h
W*
0 0 757 708 rc
667 90 m
762 90 l
762 -5 l
667 -5 l
h
f
Q
13 w
1 0.83529413 0.29019609 sc
q
0 0 757 708 rc
1 0 0 -1 602.38409 699 cm
73.115891 0 m
53.615894 32.5 l
40.101727 46.528717 27.268393 74.028717 15.115892 115 c
9.7683926 133.02872 5.1017256 164.52872 1.1158929 209.5 c
-0.37196431 240.24457 -0.37196431 262.57791 1.1158929 276.5 c
5.8841071 321.11685 7.7563586 317.42688 15.115892 340.5 c
22.54287 363.78458 30.209538 381.11792 38.115894 392.5 c
46.329369 410.48236 52.996037 437.64902 58.115894 474 c
59.662704 484.98236 59.662704 505.14902 58.115894 534.5 c
55.708344 575.42834 l
53.615894 611 l
37.115894 658.5 l
S
1 1 1 sc
1 0 0 -1 689 71 cm
/F1.1[ 60 0 0 -60 0 0]sf
0.42915151 53 m
(")s
Q
0 0 0 sc
q
44.5 71 m
59 100 l
30 100 l
44.5 71 l
h
42 544.5 m
42 97.5 l
42 95 l
47 95 l
47 97.5 l
47 544.5 l
47 547 l
42 547 l
42 544.5 l
h
W
0 0 757 708 rc
25 552 m
64 552 l
64 66 l
25 66 l
h
f
Q
q
600 52.75 m
571 67.25 l
571 38.25 l
600 52.75 l
h
74.099998 50.25 m
573.5 50.25 l
576 50.25 l
576 55.25 l
573.5 55.25 l
74.099998 55.25 l
71.599998 55.25 l
71.599998 50.25 l
74.099998 50.25 l
h
W
0 0 757 708 rc
66.599998 72.25 m
605 72.25 l
605 33.25 l
66.599998 33.25 l
h
f
ep
end
