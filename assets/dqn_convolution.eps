%!PS-Adobe-3.0 EPSF-3.0
%APL_DSC_Encoding: UTF8
%APLProducer: (Version 10.15.2 (Build 19C57) Quartz PS Context)
%%Title: (Unknown)
%%Creator: (Unknown)
%%CreationDate: (Unknown)
%%For: (Unknown)
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox: 0 0 7702 7884
%%EndComments
%%BeginProlog
%%BeginFile: cg-pdf.ps
%%Copyright: Copyright 2000-2004 Apple Computer Incorporated.
%%Copyright: All Rights Reserved.
currentpacking true setpacking
/cg_md 141 dict def
cg_md begin
/L3? languagelevel 3 ge def
/bd{bind def}bind def
/ld{load def}bd
/xs{exch store}bd
/xd{exch def}bd
/cmmtx matrix def
mark
/sc/setcolor
/scs/setcolorspace
/dr/defineresource
/fr/findresource
/T/true
/F/false
/d/setdash
/w/setlinewidth
/J/setlinecap
/j/setlinejoin
/M/setmiterlimit
/i/setflat
/rc/rectclip
/rf/rectfill
/rs/rectstroke
/f/fill
/f*/eofill
/sf/selectfont
/s/show
%/as/ashow
/xS/xshow
/yS/yshow
/xyS/xyshow
/S/stroke
/m/moveto
/l/lineto
/c/curveto
/h/closepath
/n/newpath
/q/gsave
/Q/grestore
counttomark 2 idiv
%dup (number of ld's = )print == flush	% *** how many 
{ld}repeat pop
/SC{	% CSname
    /ColorSpace fr scs
}bd
/sopr /setoverprint where{pop/setoverprint}{/pop}ifelse ld
/soprm /setoverprintmode where{pop/setoverprintmode}{/pop}ifelse ld
/cgmtx matrix def
/sdmtx{cgmtx currentmatrix pop}bd
/CM {cgmtx setmatrix}bd		% pop the ctm: our gstate ctm on host is now identity
/cm {cmmtx astore CM concat}bd	% reset the matrix and then concat
/W{clip newpath}bd
/W*{eoclip newpath}bd

statusdict begin product end dup (HP) anchorsearch{
    pop pop pop	% pop off the search results
    true
}{
    pop	% previous search result
   (hp) anchorsearch{
	pop pop true
    }{
	pop false
    }ifelse
}ifelse

{	% HP is the product: we use this method of stroking because of a bug in their clone printers with certain T3 fonts
    { 
	{ % charCode Wx Wy
	    pop pop % charCode
	    (0)dup 0 4 -1 roll put
	    F charpath
	}cshow
    }
}{
    {F charpath}
}ifelse
/cply exch bd
/cps {cply stroke}bd
/pgsave 0 def
/bp{/pgsave save store}bd
/ep{pgsave restore showpage}def		% dont' bind
/re{4 2 roll m 1 index 0 rlineto 0 exch rlineto neg 0 rlineto h}bd

/scrdict 10 dict def
/scrmtx matrix def
/patarray 0 def
/createpat{patarray 3 1 roll put}bd
/makepat{
scrmtx astore pop
gsave
initgraphics
CM 
patarray exch get
scrmtx
makepattern
grestore
setpattern
}bd

/cg_BeginEPSF{
    userdict save/cg_b4_Inc_state exch put
    userdict/cg_endepsf/cg_EndEPSF load put
    count userdict/cg_op_count 3 -1 roll put 
    countdictstack dup array dictstack userdict/cg_dict_array 3 -1 roll put
    3 sub{end}repeat
    /showpage {} def
    0 setgray 0 setlinecap 1 setlinewidth 0 setlinejoin
    10 setmiterlimit [] 0 setdash newpath
    false setstrokeadjust false setoverprint	% don't use F
}bd
/cg_EndEPSF{
  countdictstack 3 sub { end } repeat
  cg_dict_array 3 1 index length 3 sub getinterval
  {begin}forall
  count userdict/cg_op_count get sub{pop}repeat
  userdict/cg_b4_Inc_state get restore
  F setpacking
}bd

/cg_biproc{currentfile/RunLengthDecode filter}bd
/cg_aiproc{currentfile/ASCII85Decode filter/RunLengthDecode filter}bd
/ImageDataSource 0 def
L3?{
    /cg_mibiproc{pop pop/ImageDataSource{cg_biproc}def}bd
    /cg_miaiproc{pop pop/ImageDataSource{cg_aiproc}def}bd
}{
    /ImageBandMask 0 def
    /ImageBandData 0 def
    /cg_mibiproc{
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/RunLengthDecode filter dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
    /cg_miaiproc{	
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/ASCII85Decode filter/RunLengthDecode filter
	    dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
}ifelse
/imsave 0 def
/BI{save/imsave xd mark}bd
/EI{imsave restore}bd
/ID{
counttomark 2 idiv
dup 2 add	% leave room for imagetype and imagematrix
dict begin
{def} repeat
pop		% remove mark
/ImageType 1 def
/ImageMatrix[Width 0 0 Height neg 0 Height]def
currentdict dup/ImageMask known{ImageMask}{F}ifelse exch
% currentdict on stack
L3?{
    dup/MaskedImage known
    { 
	pop
	<<
	    /ImageType 3
	    /InterleaveType 2
	    /DataDict currentdict
	    /MaskDict
	    <<  /ImageType 1
		/Width Width
		/Height Height
		/ImageMatrix ImageMatrix
		/BitsPerComponent 1
		/Decode [0 1]
		currentdict/Interpolate known
		{/Interpolate Interpolate}if
	    >>
	>>
    }if
}if
exch
{imagemask}{image}ifelse	
end	% pop imagedict from dict stack
}bd

/cguidfix{statusdict begin mark version end
{cvr}stopped{cleartomark 0}{exch pop}ifelse
2012 lt{dup findfont dup length dict begin
{1 index/FID ne 2 index/UniqueID ne and
{def} {pop pop} ifelse}forall
currentdict end definefont pop
}{pop}ifelse
}bd
/t_array 0 def
/t_i 0 def
/t_c 1 string def
/x_proc{ % x y
    exch t_array t_i get add exch moveto
    /t_i t_i 1 add store
}bd
/y_proc{ % x y
    t_array t_i get add moveto
    /t_i t_i 1 add store
}bd
/xy_proc{
        % x y
	t_array t_i 2 copy 1 add get 3 1 roll get 
	4 -1 roll add 3 1 roll add moveto
	/t_i t_i 2 add store
}bd
/sop 0 def		% don't bind sop
/cp_proc/x_proc ld 	% default moveto proc is for xwidths only
/base_charpath		% string array
{
    /t_array xs
    /t_i 0 def
    { % char
	t_c 0 3 -1 roll put
        currentpoint
	t_c cply sop
        cp_proc
    }forall
    /t_array 0 def
}bd
/sop/stroke ld		% default sop is stroke. Done here so we don't bind in /base_charpath 

% default sop is stroke
/nop{}def
/xsp/base_charpath ld
/ysp{/cp_proc/y_proc ld base_charpath/cp_proc/x_proc ld}bd
/xysp{/cp_proc/xy_proc ld base_charpath/cp_proc/x_proc ld}bd
/xmp{/sop/nop ld /cp_proc/x_proc ld base_charpath/sop/stroke ld}bd
/ymp{/sop/nop ld /cp_proc/y_proc ld base_charpath/sop/stroke ld}bd
/xymp{/sop/nop ld /cp_proc/xy_proc ld base_charpath/sop/stroke ld}bd
/refnt{ % newname encoding fontname
findfont dup length dict copy dup
/Encoding 4 -1 roll put 
definefont pop
}bd
/renmfont{ % newname fontname
findfont dup length dict copy definefont pop
}bd

L3? dup dup{save exch}if

% languagelevel2 ONLY code goes here

/Range 0 def
/DataSource 0 def
/val 0 def
/nRange 0 def
/mulRange 0 def
/d0 0 def
/r0 0 def
/di 0 def
/ri 0 def
/a0 0 def
/a1 0 def
/r1 0 def
/r2 0 def
/dx 0 def
/Nsteps 0 def
/sh3tp 0 def
/ymax 0 def
/ymin 0 def
/xmax 0 def
/xmin 0 def

/setupFunEval % funDict -- 	% this calculates and sets up a function dict for evaulation.
{
    begin
	/nRange Range length 2 idiv store
	/mulRange   % precompute the range data needed to map a sample value from the table to a range value
		    % this data looks like [ range0mul range0min range1mul range1min ... rangeN-1mul rangeN-1min ]
	[ 
	    0 1 nRange 1 sub
	    { % index
		    2 mul/nDim2 xd		% 2*dimension# we are dealing with
		    Range nDim2 get		% ymin
		    Range nDim2 1 add get	% ymin ymax 
		    1 index sub			% ymin (ymax-ymin)
						% xmin = 0, xmax = 255 (2^bitspersample - 1)
		    255 div			% ymin (ymax-ymin)/(xmax - xmin)
		    exch			% (ymax-ymin)/(xmax - xmin) ymin
	    }for
	]store
    end
}bd

/FunEval % val1 fundict -> comp1 comp2 ... compN
{
    begin
	% the value passed in is the base index into the table
	nRange mul /val xd	% compute the actual index to the table
				% since there are nRange entries per base index
	0 1 nRange 1 sub
	{
	    dup 2 mul/nDim2 xd % dim
	    val	% base value to use to do our lookup
	    add DataSource exch get %  lookedupval
	    mulRange nDim2 get mul 	% lookedupval*(ymax-ymin)/(xmax-xmin)
	    mulRange nDim2 1 add get % lookedupval*(ymax-ymin)/(xmax-xmin) ymin
	    add % interpolated result
	}for	% comp1 comp2 ... compN
    end
}bd

/max % a b -> max(a, b)
{
	2 copy lt
	{exch pop}{pop}ifelse
}bd

/sh2
{	% emulation of shading type 2. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 x1 y1
	3 index 3 index translate	% origin is now at beginning point of shading
					% x0 y0 x1 y1
	3 -1 roll sub	% x0 x1 y1-y0
	3 1 roll exch 	% y1-y0 x1 x0
	sub				% y1-y0 x1-x0
	2 copy
	dup mul exch dup mul add sqrt	% length of segment between two points
	dup
	scale  
	atan	% atan (dy/dx)
	%dup (rotation angle = )print ==
	rotate		% now line between 0,0 and 1,0 is the line perpendicular to which the axial lines are drawn					
	
	/Function load setupFunEval	% may need to setup function dictionary by calling setupFunEval
	
	% this is now specific to axial shadings. Compute the maximum bounds to fill
	clippath {pathbbox}stopped {0 0 0 0}if newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs
	currentdict/Extend known
	{
		/Extend load 0 get
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			xmin ymin xmin abs ymax ymin sub rectfill
		}if
	}if
	% paint the rects. The sampling frequency is that of our table
	/Nsteps/Function load/Size get 0 get 1 sub store
	/dx 1 Nsteps div store
	gsave
		/di ymax ymin sub store
		/Function load
		% loop Nsteps + 1 times, incrementing the index by 1 each time
		0 1 Nsteps
		{
			1 index FunEval sc
			0 ymin dx di rectfill
			dx 0 translate
		}for
		pop	% pop our function
	grestore	% origin is back to start point
	currentdict/Extend known
	{
		/Extend load 1 get
		{	
			Nsteps/Function load FunEval sc	% last element
			1 ymin xmax 1 sub abs ymax ymin sub rectfill
		}if
	}if
}bd

/shp	% this paints our shape for shading type 3
{	% x1 r1 x0 r0 -
	4 copy

	% fill interior arc
	dup 0 gt{
		0 exch a1 a0 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a0 a1 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill

	% fill exterior arc
	dup 0 gt{
		0 exch a0 a1 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a1 a0 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill
}bd

/calcmaxs
{	% calculate maximum distance vector from origin to corner points
	% of bbox
	xmin dup mul ymin dup mul add sqrt		% (xmin2 + ymin2)
	xmax dup mul ymin dup mul add sqrt		% (xmax2 + ymin2)
	xmin dup mul ymax dup mul add sqrt		% (xmin2 + ymax2)
	xmax dup mul ymax dup mul add sqrt		% (xmax2 + ymax2)
	max max max								% maximum value
}bd

/sh3
{	% emulation of shading type 3. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 r1 x1 y1 r2
	5 index 5 index translate	% origin is now at first circle origin
	3 -1 roll 6 -1 roll sub		% y0 r1 y1 r2 dx
	3 -1 roll 5 -1 roll sub		% r1 r2 dx dy
	2 copy dup mul exch dup mul add sqrt
	/dx xs						% r1 r2 dx dy
	2 copy 0 ne exch 0 ne or
	{
		% r1 r2 dx dy
		exch atan rotate	% we are now rotated so dy is zero and positive values of dx move us as expected
	}{
		pop pop
	}ifelse
	% r1 r2		
	/r2 xs
	/r1 xs
	/Function load 
	dup/Size get 0 get 1 sub	% this is the size of our table minus 1
	/Nsteps xs		% at some point we should optimize this better so NSteps is based on needed steps for the device
	setupFunEval		% may need to setup function dictionary by calling setupFunEval
	% determine the case:
	% case 0: circle1 inside circle2
	% case 1: circle 2 inside circle 1
	% case 2: r1 = r2 
	% case 3: r1 != r2
	dx r2 add r1 lt{
		% circle 2 inside of circle 1
		0 
	}{
		dx r1 add r2 le
		{ % circle 1 inside of circle 2
			1
		}{ % circles don't contain each other
			r1 r2 eq
			{	% equal
				2
			}{ % r1 != r2
				3
			}ifelse		
		}ifelse
	}ifelse
	/sh3tp xs		% sh3tp has the number of our different cases
	clippath {pathbbox}stopped {0 0 0 0}if 
	newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs

	% Arc angle atan( sqrt((dx*dx + dy*dy) - dr*dr), dr)
	dx dup mul r2 r1 sub dup mul sub dup 0 gt
	{
		sqrt r2 r1 sub atan
		/a0 exch 180 exch sub store 
		/a1 a0 neg store 
	}{
		pop
		/a0 0 store
		/a1 360 store		
	}ifelse		

	currentdict/Extend known
	{
		/Extend load 0 get r1 0 gt and	% no need to extend if the radius of the first end is 0
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{	% case 0
					dx 0 r1 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				}
				{	% case 1
					r1 0 gt{0 0 r1 0 360 arc fill}if
				}
				{	% case 2
					% r1 == r2, extend 0
					% r3 = r, x3 = -(abs(minx) + r), x1 = 0
				
					% x(i+1) r(i+1) x(i) r(i) shp
					0 r1 xmin abs r1 add neg r1 shp
				}
				{	% case 3
					% no containment, r1 != r2
				
					r2 r1 gt{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1
						r1 neg r2 r1 sub div dx mul	% this is point of beginning circle
						0	% point of ending circle
						shp	% takes x(i+1) r(i+1) x(i) r(i)
					}{	% the first circle is the bigger of the two
						% we find a circle on our line which is outside the bbox in the
						% negative direction
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1 calcmaxs	% 0 r1 maxs
						dup
						% calculating xs: (-(maxs+r2)*x2)/(x2-(r1-r2))
						r2 add dx mul dx r1 r2 sub sub div
						neg				% maxs xs'
						exch 1 index	% xs' maxs xs'
						abs exch sub
						shp
					}ifelse
				} 
			}sh3tp get exec	% execute the extend at beginning proc for our shading type
		}if
	}if

	% now do the shading
	/d0 0 store
	/r0 r1 store
	/di dx Nsteps div store
	/ri r2 r1 sub Nsteps div store 
	/Function load 
	0 1 Nsteps
	{	% function t(i)
		1 index FunEval sc
		d0 di add r0 ri add d0 r0 shp
		{
		% fill interior arc
		d0 0 r0 a1 a0 arc
		d0 di add 0 r0 ri add a0 a1 arcn
		fill
		
		% fill exterior arc
		d0 0 r0 a0 a1 arc
		d0 di add 0 r0 ri add a1 a0 arcn
		fill
		}pop
		
		% advance to next
		/d0 d0 di add store
		/r0 r0 ri add store
	}for
	pop	% pop our function dict

	% handle Extend
	currentdict/Extend known
	{
		/Extend load 1 get r2 0 gt and	% no need to extend if the radius of the last end is 0
		{	
			Nsteps/Function load FunEval sc	% last element
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{
					dx 0 r2 0 360 arc fill
				} 
				{
					dx 0 r2 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				} 
				{	% r1 == r2, extend 1
					% r3 = r, x3 = (abs(xmax) + r), x1 = dx
					% x(i+1) r(i+1) x(i) r(i) shp
					xmax abs r1 add r1 dx r1 shp
				}	
				{	% no containment, r1 != r2
			
					r2 r1 gt{
						% we find a circle on our line which is outside the bbox in the
						% positive direction
						% x(i+1) r(i+1) x(i) r(i) shp
						calcmaxs dup	% maxs maxs
						% calculating xs: ((maxs+r1)*x2)/(x2-(r2-r1))
						r1 add dx mul dx r2 r1 sub sub div	% maxs xs
						exch 1 index	% xs maxs xs
						exch sub
						dx r2
						shp
					}{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						r1 neg r2 r1 sub div dx mul	% this is point of ending circle
						0		% radius of ending circle
						dx 		% point of starting circle
						r2		% radius of starting circle
						shp
					}ifelse
				}
			}			
			sh3tp get exec	% execute the extend at end proc for our shading type
		}if
	}if
}bd
/sh		% emulation of shfill operator for type 2 and type 3 shadings based on type 0 functions
{	% shadingDict --
	begin
		/ShadingType load dup dup 2 eq exch 3 eq or
		{	% shadingtype
			gsave
				newpath
				/ColorSpace load scs
				currentdict/BBox known
				{
					/BBox load aload pop	% llx lly urx ury
					2 index sub				% llx lly urx ury-lly
					3 index					% llx lly urx ury-lly llx
					3 -1 roll exch sub 
					exch rectclip
				}if
				2 eq
				{sh2}{sh3}ifelse
			grestore
		}{
			% shadingtype
			pop 
			(DEBUG: shading type unimplemented\n)print flush
		}ifelse
	end
}bd

% end of language level 2 ONLY code

{restore}if not dup{save exch}if
% languagelevel3 ONLY code goes here
	L3?{	% we do these loads conditionally or else they will fail on a level 2 printer
		/sh/shfill ld
		/csq/clipsave ld
		/csQ/cliprestore ld
	}if
{restore}if

%currentdict dup maxlength exch length sub (number of extra slots in md = )print == flush	% *** how many entries are free
end
setpacking
% count 0 ne { pstack(***extras on stack during prolog execution***\n)print flush}if	% *** BARK if anything is left on stack
%%EndFile
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 0 0 7702 7884
%%BeginPageSetup
cg_md begin
bp
sdmtx
%RBIBeginFontSubset: QWBOSW+HiraMinProN-W6
%!FontType1-1.0: AAAAAF+HiraMinProN-W6 001.003%%CreationDate: 1/27/20% Copyright 2020 Apple Inc. and its licensors, all rights reserved.11 dict begin/FontInfo 9 dict dup begin/version (001.003) readonly def/FullName (HiraMinProN-W6) readonly def/Weight (SnapShot) readonly def/isFixedPitch false def/UnderlinePosition -75 def/UnderlineThickness 50 defend readonly def/FontName /AAAAAF+HiraMinProN-W6 def/PaintType 0 def/FontType 1 def/FontMatrix [0.0010 0 0 0.0010 0 0] readonly def/Encoding 256 array 0 1 255 {1 index exch /.notdef put} forreadonly def/FontBBox {-378 -361 1241 1258} readonly defcurrentdict endcurrentfile eexecD9D66F633B846A989B9974B0179FC6CC4458BB4CB99E3608702C78822367AAF89059868F63F93207640A6BD5DA214789139C491E02A37BF3866F2964E8D690D48D9F6C4A5EC22355F8123573812483E06B968AE84B5F20A982A0E6576475351697AB8C6EA040355C5542F297D7A3AF28AB93EA0771E0D56DBF00F7CA9CE9FB9FC2E0ECB00D04D5F5F3F24B987B546D6274971A477DEE12C44623C180BCDBA21172627610C4736632D1A4693E79719C3BC43DF5330790A52DCD4CF455ACC213F6B1C4BA249179DB360225568161552A16682E3A3604BFC39D571B1F8F18375BEF1B05D6DE4413DDBDB2D936EF6A197BC87EF3384DF04E6025A3A7EFFF451D52E96CDA84AFA48564CA977323118C727ADB94982B68E0AA8DB0796D5DBEF80CE3FCC9D7B40179D4C1734EFB7B54AAC66F6A3776AC961BD6A9F0BBB895CDB31E6BFE43DBA9B8ADD00D05FEE680807FBD372F63D640802C4893599C0830E52BE0768F71C3C403EA563E069BF09969406A3079A330A94B33F3F01944BCF02F4F594A06E13A70D02586B04DA9A81792ADC841591AEC755A2E70747085ED7B4D320478655C65DB49AE01E96693C2585317861ED12C015D74F657ED217B8F7C42230702EAA77B4468512621CADA4527CED7541B38EC37DC765A9635734075699ECD1B363CC83E98514CA678E6475BF31F7D0EB5A18D2BBCD53F84C36B346C91DE5B290B65A72104F9830F99D6C182E684C83EEA2E6F32C396A2D958013F041AA6F0FF54989FD217EAF71716304D0A772D7F15CFE11AF6251E2A75147D6BD24D2BDE357797A6E801A4205E2B1291F6B8AF6D252614329DB7859B76F209CDEEBEB50C6D2E57FD766724368A2313C5CC4FE59A7FA3DA1753388FB5B8EB03B181E6CA1C1F7C67A4D9C75E3DD9C0910BA6F21EFA50E5B21BEB793A8482AF172B65B098683ABE262D36EE714EAA9F6D8D91C6F754AE8955C287BD1E20F248349D8029B34D352DEB6C633ED57939DDA06267C02AD372137E9F69E8889EB10F4E0C2202D07D279724118EB3DC0E91C9DBCB62DBB9952FF8C82CE45EE7D659A9F789F8A015A648CA11B7B890A70D5ECE5E6655FCA00EC2E338BCF093C8ED2AAF233056FA7178B40EC5B677C009C5B039A8EDD14526C334F24DFEAE65B7B4E67B1283569EC28939A98023D8CF6ACF1AE5C11D393CF3E52F4090F5052D1A7FCAEF8FCA0F0F0565689DBBC53A8B500E32F2D9DDACDE48086D27492F9D1245C5DEA3224F02A1DD5476AB3127619E52093D30BD109347EAAC9964816E174A89243EE6E5A62CF4B2485BDA1DFF8DECB58BDAE95D49A539542D9A661E4EAD44F131CE4FED5B5382C4035E70342E809291F43A14A49E17B96E9C50758FF2E53CD83B9D0D78B2812576B602A8588FB74DE153BB8EFF7104DEE93EC338612D749C204A5DBA76175A9BA179E69D768079DE538115DC4D468634DD09D25FE1EFF0FF8CBE4775EDAF20742D6820D487B62995C9D2F4EAA4DE9F16A28F619DF3CABC8207B4D0E1B0A6CC00F5C2FDAE4BB6D5332B6388381B51A1EFDFA09DF4559ED33F797CE4330CF7F7585C413529AF94460542524E4FD8BE769ED64555D279979B29017DED67D04F871FC1D83CBA3234EF9CB9E8451F41CCD6EC3E8F16D1DA5DFB0C13910AF51E512CF31072B5BB515EEFC9725EFCB802BC3944D79AAE6EAD7D60EA6D359867F7858267F0D2C575A6E5A4C6AA8C0ED784498A536A9CCDDCBD3282F1A04D3516E53247412CF9C44B0844AB0989141284046505AB0FA93AF3E69FDE8FC2F795B309BB3925460224291FC4DB25AE4853B8366A589803CD3E6C4B891FA97FD99E47B49CD440CC88796F356263E5ADDC77788C4AEDFEAB14FEC3EF66FED9DDB949BB31E5528FD3507244BDBAC50399C5311B3C3C340C53DE200B06B3F1C2AC944583996C24F3E935177293FB3F2DA0466578B1252E673B451DCF96B673232013457FCCAB88F34B7E8FC028048E5A76F5A51D48B3DAF6E39E0709209D2B3E8E8A73EDFE83AC00F76C21B66A5652A55ADF012C8D23DB9CD318CF6E682A13D509EF5404F3BBD8753300566771D90D295F67C17995264A525CABF69029597FC6F6B21C2A3B50AB8EC6E8A2ACA181B173AF4682E3FF6CE342FA6C2E4C8B5DAB0082323ABDDD0726692EEAFBE1E13EC443C4E1D13810A187A2E8A3F380511D3D7CD9B0EA10C4E57D7D0D155E56B34DFD20F6E495B8197F317D0A131DAE3EB8072D75A9EA5BA40C1B67BB5D7B8C4C093F2FAD92F0D938416C335CC55B69B81D7609E509FF6E7A8E0CA53AEB29A1445F54EA34AE87B8B663C60DD8AF3D8A317DAEE7802E8B5F2886B63D97B5E3C5DE9ADE614940FAFDFF36498A97E2C1EEE0DAB1B84DF3232C31E04C91515A0688970AC8B7272AA767B9145E2D699B51DBF13C8BD087ACCBC9BC83D58DECB9654891DF13572CE2B4B0C378B485E24595103316F39D73CB6BB7720FE23A81595B3A82D407CC208819082A12F07FEA0D8B166C384357283B42110BF5356CF389532863BD4C2E2E5746AC2E9FB4A1044F282BCAAF706A3BB65854397F6C077B63F8ABABE2714D9E7C9048A722651F93352F268429C96858C7B4CFD2DF8A50E1465B24032053619FA508C8A2C65E34356114068E0392AF6A2B5EEAAD5E4C0CFAE8373EBBF79CE1CE6AC330C0B4E0F046E60350EA539B26BA3C28F0DEC9B5338CA428F6CBC367842E286022431FBCBE94A0BBEEE530811B04C73CA609356B920D54938997ABFBA6569E65257E00DE13470ED7CA97562ABBC7F168B2FDB31E4760A426809ECA3D5ABA8484A12CCCBDBE3BF56AA2FCD4B5A7B65F3C4B4F09A3C753002901B0653A172257986ED192C3E0882F79091F203025E497DF254FEA120FCE6E52D7E06527E79F6379FBAE5700332C5F6C1E24FEA4BF02C95927647D9CD8FD5675273E9BE9A67E85A669367B08F55EDA0EC9A93FEF9352FA0888A9BE04E669CD00EBFE89068B9495669F2211DCCD9BED286B5DB41F5C52B0CD7E58F18D10D55D492EDEFC3C55FD28CF86E45A3B224CD0E7A0FE6719F271994E79CA5E0C1F84F6E8779E348F1B58840EB5D1F16C96278F7B14195C4CC57605F487271E0B1C14D071FFEA07F2A2C69618B5AA1AB901C14D1BB620BDD7547E8E72F3AA42F3E8477691E1D04A5D0EAD88D2E762EF6F7A8CAC016FFB5C93B9D57F2E1D7797C3F59013B6575C61DF888527ACB9D4AB135F142B79512EDD9C2E31FD46771E79A748A8F1542BC3A005A92FD0CCAA05A93A2A1F13E958BCF376EBF45F3506A1BD754AC93168BBD529BA5BBEC28B2592BEC30D9CE625A08BC65EF59143DBAC2FC80D611DB6EDF1CBE2F33F18FE54F631431E6E844C79E293AE4B18B5AB6DDA980B6DBCCA23943FB092656ACF35B004CE1788B38D8F5B3547831ECDDA09BEC3B7FAF0890F525C2BCCCBC507D19275AAD03F5414768AF71E1D21C4116B8975B7C14EA9C1607015518630EF2AFC6A3CB15FCB62F05DDFCF17886538B8EDF07AE582954DA192450A088F785CB2FF5EDC108DE552ED59BA405C8F517206977FD15DB1C273DC5068CB41F7DE2F5C27B0A524DBBBA053FAB81E7F414C40C7444252FF78030561B0289083C74B17319C4626C4ADC322EFB4ADB6A5A53A2321B632972C1B5655C840494B5C185AB5DE2A48AC8DB27F0834A4E8A99B3D8F4561C48DD87A4569FF5D9727EDB0ABBB9C9BFFB686FEBE1C8AC09CC88D37550A0D32622D425E48664BE7D2BDCF88F404F22426E681D800F33140ECC190166AE31DA282C95938119C3EB22AA558ED9A34B152D404984C670C43D6DE5B930CEBB5E98337D8B822BECE8AA937CB28CA046B6B6371B98EE640EC6BDCEC78523C7FCECBE3C9222832C9AEE1C9836CE4022004B5284140CCD58016EDA53743DCC1D3E0B8E50C697700C57197B49A19097C6C0345C71B627904ABEB92413BB72A12C750A8446B123A4EE696878DC5E60FE3B4022798C4190758FA05A96911DFEDCD9F70669E309FF4491DC54A74B44925F90EFCA0A89C975A39870432F9238807B28883827D910713F1C11E04CEBDBE3C22FEF17E974BDEF302B1BB96C2BF28FBDEE81661A63A88095AF440E4CB006EB48C387B8B7BA9F29A30983D60EEF0D5D75FA6EB492F5716645DDBF61C64391AD7F05AFBF62F870DE19C2F5C917AE5ECF53F4084E38BF9A7308096CD8146B84BA010BFD898D15CBBDD0F52B88D0E38F1AA4644CBE05A8F3FEEB003B5C3BBC9414C71B2A74557230EAB5317936D69ECF3E4A35DCB8CCAD4D26E466C53BAC08A395844B641C6D84F865F2D7F980B5C1ABB98FE711BC8AFD61B90A46216907D231C0433B0F819BD778B011A123498BED21B2AF91D1A45D6F4EB9A26D2347EFB955CF4363B63A7259D4AFE038EA4DD48A76E26440E51F48E3355991AC4944BFD39FD3C4AB61DAE085E8EBD43C4B2DAD0F81DB5C909EEFCAF43BEEFFCE27D6864F4717014373C52C4BAA99C296B0801D72E4219BA78920EF12D86B7D09C4E561A612960F4981E3C883BD6AB99950608880A1F90AE69D8C216E91684D3830E48A8D21A476CA9415E56AE57F4F9767F0A0020C5972D68A634C2EB863B0469ED1F2D4C926AD629B96F949B228AC81AC4B88EFEB1EE1C141E705F6AF89B5C7F362CCDEEF1E39C22DD4C4A9360B67AA0D90D873D7579FEA22FF659A96D8DCEC4A9C7DF120B24C603BFFF4152B4709062F0112FD20E99C675AE2F1888A3F330E8E63AE06151ED11BD5A31978D6D787107FEF834BA85ECC0ED71A2E073E7F3CE7BFA6CF44BC7F05CDEB300C55E353C51D0623E73B42806915B82AE6442529C0CD32328C93C7AE718991AF2096B286F7614DE32B9881B3B527D4C2B59673E8EEAA1CE5B77CDAF6F180365BBE8D1FE65D6875BD32D290F42DF5310AFDBB6B902EE27D4AFAEFF8913A509B6C6079673D2EEFB9353C335E95DED4DF5F6EDEB13E5D9914239984321F44E2219CBCC7F2DADA3BABCC61C01AC2B9A910D74A51FAE865F8D4B9CE8CAE793ADAE2C0882670CC13B7469C850738D11D1A8638ED2FE0C7F573BD74252CEC81DDF9786AEB7FB8A63C0B0975CB61B4773016378C117868277D11CDAE57DB2F2758C3465EE4AB66B2DE7F00E97DF7E51FF74939541AB9F3B8E9827E0D3C8D351DB0243B3F6A979347F229E6F14660FF89D5BFC37B35E628FFC3ACD029FFBC5B02FF1AAE1925FFABDA41FCA7FDC6F909061A73A45D0BA6780D87CF1A77C67E0A0771B87FEFEE6E815B3D67BCA366018FD3CECD5B3AFE7F9BC23906E9248BE7CB0F26007A0B364CEB353EA20ACCAFC4401BE7AB894A124D30EA779AE528681E0637B042DBB597A1F3E55B28B3E7E1153549208B386283E09420EF276F40B6C773494C8752AA8888D21C4CE79E93F363FC98603B5860DD6FE579CB416BCB75A7A37B0605C4C34F6E9A1D7B3A0102A12AE26DAB60E954BD6D80C7515870BD6158EB93E963969205FE4B9E2554D84E0B140574DF5AC77C264487ECD8758254939587FD1BAA0F84709BA115593208600B1A0001C3A8821058DEE14C75C6592A7D003D5CB701BA01F2C63B86E63528C9B93D18D4F19549901CEA89245B1FF65AF1463E74A4CCEA35BD4394A6ABCAAC1DDA38557A75152DF89A35E3C6EB41A2A87A5C2D38A2F8175FAB5BF335B8120D095B23DACB2C0902FE3DC4EC8105290ED2BFCF69ECD3CCC25F387516D558A22F49851CCD0B2E83A92E2D551DDFFD9F497ABA073CBA997528D998F511524225EB662B5786917A33AD1FDB1FD3D8EBBD18973267DE5863A6938A69AD159DD39B4908537CB1246CD0ABEF2D49FE0FE8528A497DB6CD29C52151B500B440D1AD85FED53D22F9E3FA76A0C7E8D17DBE274FC3C8BDA728641A272392FC4A9905D01C51577E1D8C34925DF276641541FAE099671ABFF16655795996C3EB607B65A003BAB580F209F9EDAC26F9201FA3F00C7B690C02DAC60B6FCD34FE6C001C62C2CF1FF6FBD57CDDD66AE773E74EDC14EAA258EB446DBEE6FE8971B8510B42FEB9FCEF7A6460306CC6D0081B2FF1A0171C8462FEFCC2BA8A36B8030693D69FD209698CBE839ED06386556C11DA4A133071904F5D5CD9108D85D986E8AD941318AD6ED83EAEF3F558DF856743BA0F095F05485AC8E5DD5F156F654D19C5956B84BE920EDEF021A7082573DAD346791E6F988C94EA49A1AB308C409CC022C7C3EA4C4741BD12D1C5B285EF752D3C3FFD12A519319BDFBA532208F02E3BDAE5C87D2022AF9E82C223BF9018BCEDDCB05FF33B19EB8FBABAEC558A323C7DF05539BB5A4BC6623246DD2E86E79A4D3BE18461839A039E372419C8D457CF46187124876CA6B6895E458420093F4B18E6CFA195178A67F20597073AE7A608003EED684A8E5985BF02511FE6BFCED3862B226C009A4C6AFB9267724A6BE134870FB5551473919BC5CA5B7AB009C97171815F94B7EB383DEFE2C0C3B71A4BC6C687C3706CB13FBC8CEBA19F90E3EEEDBA024A224C89BB5C7F3B5A598AF5F5596B250D55A90EDE2B679D800262A8A3F825C95E18EA4AFA98E2D6726C476F88C623133B72E8B2590AE3F1A5854F89A084C977B587BE5A49E172DE8E1756189FE926B3413AE6AB1A195F7FEB493153CEECA16911C8F03E6B8C0305715057482DA3719C1F99820841BA6888C844D4A9944796DF511833E084CB6DA46B738BDEA3DBDDE9DB46C6120A8C8C712B6DFA07883AEDCDA18311C225D086A0535CBE73008C0006C8C4E24786560904DC1B9D39BAA410B114942041B5D3542249BF63D027ED9B7301BA7B8758445216BFAF0FC1B0A20170F9E12D09D8B920D93C297FC96899F8E284334D14DE151400EDCC0803BF9EFD88C00B9355D4E85CE26E6BBAF1BE7F0BB7D7656C45FEBE79AF949F0740D801B720D893099B12594C566CF450BBA7AD652969AEDB00AF2CDEF1C2C2AF361A470D19D3AF3883FCF8A08F341377B757D9000888C1A120C586084122201F1ACD4AF641D6D9F58F30D6E9DDE9FDAB001AEA15EA789D2D6901FBE5455808814474A83D75CAE3CF758F2371C2849F47C0584BF938FD8054FA8F7E0D5D58597809341DFF288EAD802DFAAEFB9165B2BC54C5157C134FF33E9C13BD931C5546FF7836F558A3D482D0AAFC4444960832AD3561C44BFB50C6AF1B46199B1D1135C0A6F423695C53AD40517EE516A014ADA2168A968FADEAD6EC98DA93E93B53B7CC819AB48D8158D1CE607E74DD95BEF47C18FE0CA33E8F4075D8CA5FE35751681E1829197C3012E85AAE158925906DA600504A4D7A96787CAD7AD73D51565B6C3F9E4C05EAC3844D685294021868B0B2245628BDC9E1C1F37DD9C2B0BADA123683655C947871AF1FBCA4A45A883E55A2CAF58505AD6B392364811A17630A94FF0970FE8255565A7E928E580D7EAE25509D35AA55361C8C1D11287159BB9CA3152BC586C0442684D19C589130BD24DDC2399D0DE14C5D1F7C35F591F2142AD38E75CE0164A9C31A6F288503CDCCA3480B9739D08FA4B341811B81305CD46DFDE87AA0423AE05FD0B59873F686AFE79E4702E5B6D77E0672FF819C1A9D72C0236AA1D8391939E48A83223334787199DE132FCFF5EC38C43B99EED38C3DB1D353C13C34ED4CBACD23C8D7BF71AD82083B6004B179CB248B860F37920115FFFD23162725C4E1700B986CBD9105B8B23E0CD11C9DBA7EFD3F9DBF9D049684CC400CCF0A158D5C8CCA4988DE14E72740A1EF69F2B0CDC25E2645C7297A29DB91506CA03CF59BCBB167F2F2BA17417738D8614963BCDAD0D4861393FD7A640F70B2736E6609B64DE43CE0F2F1DD4189737FD421E32B534DC5E3C6862B1D72AA1318BA0016FF7A169E1876999FED552F7A61AEC489BCA6E1C8B4DD6FB045A56718E9EC8B965A5E8E7C64A566E31E00B224521169A496221EC2A9E09120AC4EE8824B7C9D7E5DB209E9185A685A0E984D087B11AE34C1E2AD7177300665F3B589FE7F83EDDF70438976AA075C3CEF9050B6F427BE31312D3B9C2A1221299CDC493AF2A9FC8F48A641ADB9BA0060B968B48612108B680F613B1A88E9208EB29CAC8611C9F03B5A2542A556334F473E5C3486A9EBEEE6C716A2604C523253ECE788776C8D0B06F4146AC2E925DD639B24B5EB2B95ED668D77BFE6746C5A67669A38ACD53FA78C6A6C142F21C910FA0766970FF86059E9C7D26D9BFEF0AE41754CD0554E04340DFA7ABBB9456E5952A050CAAF0C0C95D76E099CA7EA740D466BDDA5F6528D81DCD579977D630CFB635F7B5EC14904C0CBE264E3890AF5D7B98343E6E02F6FEB5A8C0E0D31870D2168D0C17BEC5FA6EEFB5E0949674C34768F001827F1564996510C911219A17D9C926280C366EB7B71F2DD86CB3F1F6F2377A2049AC991F28F0491DCF27CB11CAE1BEEC0A7A4433204E22CA4B26490A53B95FB328427128DE0BBBC6A45855ECC40D83D100FBDCC9925A37EEE489C7FCDE507661568DFB4741ADFCDFF2D3C7DB69502151FB51296BD185CFA58A9A14DE56F29DD02B0113C6E25E06B26A888B26CBC4552447C47CAAE39EADD7E74EBC294831B5A33D5D4E35C6CB752BADEE9B5853111EAC82E9B25A9EC3D0F3C92FF7E5EAF1667B94CD8C989CC922052C911681BB3E4170FD4745FA3AF813F24064AA7B79ED8FE3CFC1F53DDB36605EC94D2775168BF5CBF1D1257FC1808035153EA140A46E4F07AC187B59BF327CA2A79259E9270005A55EF78F37C9E3ADD0615EC97415AC6D9F3939A26EB06F2B328C3C998F788370F0309BF28B5E88A1664BEC03F88AB5A31154BAAF3EF451518475DD31AE2E7F1118A28BB6169AB6367B6F4AAA4194CED3E198FEFFD6BDAC621C09A99F7E4ECBFAAB273153E8C8A490116FEB5E5298D1324746422888187900B47118FC36CE00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000cleartomark%!FontType1-1.0: AAAAAG+HiraMinProN-W6 001.003%%CreationDate: 1/27/20% Copyright 2020 Apple Inc. and its licensors, all rights reserved.11 dict begin/FontInfo 9 dict dup begin/version (001.003) readonly def/FullName (HiraMinProN-W6) readonly def/Weight (SnapShot) readonly def/isFixedPitch false def/UnderlinePosition -75 def/UnderlineThickness 50 defend readonly def/FontName /AAAAAG+HiraMinProN-W6 def/PaintType 0 def/FontType 1 def/FontMatrix [0.0010 0 0 0.0010 0 0] readonly def/Encoding 256 array 0 1 255 {1 index exch /.notdef put} fordup 0 /uni0041.34 putdup 1 /uni0043.36 putdup 2 /uni0061.66 putdup 3 /uni0063.68 putdup 4 /uni0069.74 putdup 5 /uni006C.77 putdup 6 /uni006E.79 putdup 7 /uni006F.80 putdup 8 /uni0074.85 putdup 9 /uni0075.86 putdup 10 /uni0076.87 putreadonly def/FontBBox {-378 -361 1241 1258} readonly defcurrentdict endcurrentfile eexecD9D66F633B846A989B9974B0179FC6CC4458BB4CB99E3608702C78822367AAF89059868F63F93207640A6BD5DA214789139C491E02A37BF3866F2964E8D690D48D9F6C4A5EC22355F8123573812483E06B968AE84B5F20A982A0E6576475351697AB8C6EA040355C5542F297D7A3AF28AB93EA0771E0D56DBF00F7CA9CE9FB9FC2E0ECB00D04D5F5F3F24B987B546D6274971A477DEE12C44623C180BCDBA21172627610C4736632D1A4693E79719C3BC43DF5330790A52DCD4CF455ACC213F6B1C4BA249179DB360225568161552A16682E3A3604BFC39D571B1F8F18375BEF1B05D6DE4413DDBDB2D936EF6A197BC87EF3384DF04E6025A3A7EFFF451D52E96CDA84AFA48564CA977323118C727ADB94982B68E0AA8DB0796D5DBEF80CE3FCC9D7B40179D4C1734EFB7B54AAC66F6A3776AC961BD6A9F0BBB895CDB31E6BFE43DBA9B8ADDEDA5F4156ACE881EA7E3B1F878FE42978A25A973FBB34B86FD6DB496CFFEB432A05C260E8926A03642EACDB3EF0D334694EEDB7BD8AF000C3F636CE6E1079416D00E5C06351D25829D86438497C79605F151F1223C3DC9F37402A5B94831552A04CABF3593276B946DC4200CE895702AE531DC98DF7FF9063A07C43BD6F3F0C89AB45F01E364981E39C954A9E3FFA70681EA486282EAE4F2E48F76441DEEB4D0263C1416B439040E738119C7FB3B7B780A783151045140B6C67DDBAB7CBBE29C3BCE12096B4116A276CC258D730364EC8553351FA472A835D688143795FE7BE010B9D482F145F319B065F4254FC9BDC5312131791B7D0F967D737987FC7300A576FD6971D8DE2ACB76D2B73548A45A187CA183C21AA1745E72554BD29BDC84550AE7FDCE4E257263F8BE7B5CCD99E4446F96FB6ECEE37721CB0DA39FB26CC1C0705ED129E0F66640F42EFDCFA2ADB6A5BCC67075E5B8214972E7EF6170903183951B767B4AF7AE103DA69E27C15FEF266CF8BCDFCFA1FD14E6191E3999F45B4FA44E27856777213846C880F2F7B08F70D9D97367391D656A393C21E15B59CDD56483FA67721E90CB4A2F0270F675F3E11B86EAA7CE61CCE66C5FD82CB8DE51D5AC655CEB9CDD7C96009230F36B605FD8343B8C50AAD2BDD8D04B5018B2E53A258B70D4BD255D58B827CAA3B28AACDFE05AA5D81C2509F129F49529F2C9DDF50221BE381FA6B18A03C7D2189F3096AE264B0931C2130946AAC259432E015942827E4657F7ABB50F6F437E766CEA83DCCEDA52B484B4C4FDD6E68130032D38FE8C249A277F69E8A8BBC6C1B659FCFAA51ACEDDFCECD2D41D785437E0B9F2474F4FBADC54C823485ED08F8A0C75A753648B074742681C9E8807BEA99AD298A20666C61936C62599A8D2BA2259A238F6AAA2B9CEC552CA6D9FBCD6D50B7C3313C28197DA73C2FF6C9F26BD42C100D68565EEFB770116A1458D4D3E994146E3A9AEFAD04C63D6CFE44C382DFB7AD9BD0864CC4FCBB558802FF35649A563E5DF80F172D00A50F3F72C8D4C826C1018CBB194309080D411FB0B82E3F8556604C0DBB37DB7CF4195FDFF64D331A46802E99F6DC23E6126B0309BC7C7231D951616587E0CB9B1D133C2AF49DC7CFE5B623DE53885E69C55B6626CC349E893B79FD8F2768B9EF47B0AEA6791A2B0CFF2665E3E53B3ABA186C5B0DFCA6A168CE3F267109E588BB2F5C5E4158D996605C369616B943DF3E79571CE13923C8F2CA79957643EB96028C76A077CA5B07E82B47920A64C6C4C2B28BF30B6777431212FFDC22ECB126DBAD67DDE01422D42BF02526CF5A7DD9FA9A2036021D859C5D5741614FC16FD1590015AAFCD31E31A69B5CC5EB78B5169754EE7A77FCB4E3C9D2177579710C7EA8E6FC9E1B20339B991E0F1DC8E15F471D903F6E4A1553D176706CBF6913F9C0A032F7D4B1F6F7ECF6FF25126FBDF7DE5D4163CEEBAF84F5095808ABAD4993108B187908A293A51A999102C55B6413B1A86E53B359EC0D3D35CA8BCBFE2731883DE6595C18ED2AD0A7EDAE45EB89D38244C1E16066AC396AE93CDF669CDE96A059B414C8F46E3C205976A655FD68F244840882B589DD01B7C3B917E96596B6520E11FC69BC36EFBD8536F27AAD4205ABBA25062BFA55918CA22C41CDFCDD5C95E5929D17FE7F5730435315F29C89FD0A4F2889C9E58CDA4E3A4B8FF7380AF621137A7FC47D45BB2ADC800D932BA4773849074B1BC0569C67E3576EF26F2C67E9023EF73162E7C1CE8A0B2A956E2CC48522B44D1D66B27E3BA0C1BB2BE57BECD5CBA6B5FF673D3B6B54930E3896E7672516B8A99A131859A6D82B122A71E557C923F14CF338C3E928662F6A0EA8866A50075BCF10A6466795690A179D1A4C1E2E02016C3709F23E9D2EB192ED36220125D2E825B7BB8D6EF7A9786388A7EC1A9803BD2F8BF73917B82AE1535BEACD87B57D0C297527C24D3898762E84DF2DDA5089D5823F55D2179725937ADA256F4563961E09FC0DE2C095DFEDF453DCCA5245EBE1DDBA986F926EDDC190D0B822C0393FDA0C0CD33B0561DF9BA23AA1D9AB63F4359630076517A3C1FDE8076D8E21EE64424BDFDCB8FF4D39B61478894E82248F3989326A8B6E67C45DF89749E8210F7E76DB46C1B406A866282352E94D18744960B62261FB18FB967B05F2C98E1E977B9E593F89C605C1EABFAB8E596E22F26F0BE523DD5FF2D6B1057A5F8E25C2F73CDE032E07D93E28BCA5477E355D2CA28D8399D8C0669361C2BD91B18AD1C64DFFFC69D693A1F0FB68A2F24825BACBC3E3DCC40036C547170E1A07EABD651B2274DF54ACF61C4D89EBBC7D7905D41F36C4801D04D6D4CEFAF7CEBA7A5A97B1B3C75678DF4D87170D52C2E7C7D654B43727CEA7C0E30C3F90C41052DBBF333FCED6851D9D9F403C3D7AA7944240045AC3111BE06D3B5894A2BF2A239ECF7395A54C44BD0A48F2A3FF25B50E478C9273190A75E07F83706B6775A73350FC66780D08A46155F30EA77806DF5B10554B79BF1245D9BEC142BB7D7D5BA2679A66CE810A8D21C3CFEF666DB034DDB56D524F66FE01BBBDBB41F63E497ED7B73090FB0F475728F6CD341C272B92FE040BA1105811A880E10E9975A5F4FEDEB914C6EFA800C22CA38E8C3DEC11A4C7EA753E59DA3E38B27EE718DF99A5A722D8A936A458D8E82E9B084C0AC94809A76C42062E24B81143BE11DF050FD7C0C3451A28F9296F1092AE485829B3D4D0F033044DFD305BA01DF65B6CD7AAE32C3C34A617CF3B22D85D2B0FD11CD3A46D0C4356C1FF6D175C94341E61CE5D97B6621125DFE5B8464490A65293F7BD5F526CBDD9649F6D4967332C403000BDAFC6EC7FA1277C38C749FD6D214F3BF9813208FD6EF5E490D6F41667709826774DA62FA8B708D2AED095A520961FA0F94F447BF9C1EA2C7AFCC2A09851585055BFCE166450ACDA0C63D78F08A706BFCCFE4BFAC9E0224E19EE62C44B1EE3AFD6C734F30DB03545B34218B22F1A155726693B87A9E73C01FC61DE0C7602748E71F405404404855A0E12C80932718C54B56563FEF189E6C1F69A33CF9BB4FFF96A5156A0A4D8E7E2CA70862BF3BEE8784934096A3D3F26F9A5900CB8E7A45F940C769794FAA63E868AB3FB2A973AACBF848DB4F9F4FF7DCB00598C295780395329D80E01C2AC7DD069E57C9764A73E96A2A89C8EA1B72FE3D92197C21178A00FAFEDCD17306DC9BB29B354A54170A0718F11503221A77379CB8D0B37F5E88925FAF7F6F64149107B2D76E6654BD6722CF7EF88FE9896FD9AF32006FBD7D2B13370C64677EE1D47022C5C177733C7E20D88EC1E7E7411CD1F8D1821CF81416A174BC678EED5B6CC7CF2F00D1021F1A556CCCA8C0A3C0B235156DEEBA83B4AC968D92BB564EC6E4767FD279B306653D57C5E08647B8CE9CD651513F57C222CB7189C497A89C02FBA870259C8442942D91F7D8E388ADE2328C6EDA76CF519A4FA0E9246D7C8433A829BCD74BF4413C4B6ACAA1141BF3972DD9F39299788C7D0BAA88F2B83584EBA1D3CDFC41ACB32DEB4FE2A07B3BDBDC03B77BA0C72E8CB114B33EB8C7F9CE70A2C065A1B520856B9FDB2A279877D2C4DD342B312825FF53D5131A7D4A4ED8D3B3E69F3DBA50EF0A1FAC323C57945976E535A650A1CE8CA69D21815FE0907B2840E0175632628B3D862ABAEF0FEC812A7C37A1527F94E91B8F81DE0A498BF5E8CEE6FDB682971320FD79DCB93AA941C7679FE7C82FBA22EEC44B9C51EAC22C00874099B8907D0A57E568491A9D94C8CD4CB73B7CAA1FF5843F0693ACAE4F1E5E47589EF061A1E1CCC56345C70B27B3FD5F90810997A5565CDC23D553492DEC6EA4C81CB400C27BDEFA4C206AF947A2D9B76F17361E9755F8291B5A2562CA2DBB0B6477DBD8A3D9DF9484830BE83E1B7AD9A5A8301FC6218B5AA753E19C4BAF1BEDA59C297F3DD90991216EC8EDE0BD17B5417193D48ED59FDB4836440C1F4E0C5B4816397E3FC4BB6CDB741186F7FE4BA5912D12C4917E49C29DCAEE75FF37E1CD892EB577862E3776AAA9977586925C40388177D4610DBCB6C9E3F0CCFE1BDF902B1D44FE07DE04D029BA4F7A205B283AFB7FA657B74774E12B9DCDE6FDF38180FE9BE5D53B91EC94AA039A48763E4F9765603A10F137A7C774AE141CE7A73607433A803E704F2BF13BFDE043CA8282F522597CBC8D695277BB18F3137CC19246AFB30C74ADAD31A26A142541C2E48E9ED1900EFC8AE7D74753049428BFB759C5076617E5EFE7ABFE4649CF3B357D4131C882A7023E20EB7DE852BDF8C9B9FAEA68FD4A45118C60D0EB5AD095D5508911A7C3D39D10FDC37A92511F32163CB1EBA03E834D6D2CC8445F8F87ED72FE4481EB5318C0447F04D2603389D490DDD406B20BD8DA812A91A884BE231FBF6066D92361BBE18774B842125A673629E22F1D84CCECCDC6A441D6493B57C02195879208C667CBC7027F902D8A3F1AEE3B64F27ACFDA70DD5E6F1DEE307750825F15A5A29157D068893F84E00C0B002434C64C133936C8E093F7F2AD038A799812DD07144C33D2F6829D1F41D2AA9281A06BFB33785BC24DCF80DA36AD7DFB3BD484667A391FCE0B17A0AC8D331D2D096251448A92D1F7E95E46D6E37A050FDBE0B317B52B8DA40CE8230F2EC8AAE76A0720E2C93E0AC7927B7B26D82578562F6FEA6EF7139D89952A2F71BCA748408F08FB052140C9D1FBCA4404DC91BE4AC0DC3D41A1999985F01EDBF2173643BB7AD7CEFDA13E0D30D90014953068005D4B061559B8EBAC028B219C8732BA68E198D5D539F6E72B98C10FA6092CCD4957C01C802E2D6071BE17B0E2FE392D7BC82DD9E444C14059FBCC1269D92D894786ED3B35FF41DEAED7773E30CA96CC68E13F138B3D746A4851C4DAD36D7E88E260C2833366350FBE173DF61FE4E33A5348F6F1EFF0ABFAF1F8666C252CBF32BF169B549BFB63A7AEB97EC6A96CC9C42114057E7318F0AF973BDA041D2F05D0E5828FE60709AEA1A333C81E54C422ECC5874FB0F0B4291AE28755F1E70155341D67B0E6DC9986F99E4F69510FF5C59AE2232578BA2A181EF9FB6D91E41EB238FCBE4043581CBB2AFE20664C8E77BC7F38053713B0E2E421F45DA7EAFF77376E8FA964B4E279AD2389C309064EFE123C9C27FAE8AE11E96EA28FC1823AACC70425DA92A30728F320D75CF681613CF0FF10D5BFA857FC9C635EDBF0ED8215C2C374C58C26EB252597C1E47A6016563D6C81EA4AB02686617FD7581F434DCA1974C993ED2FCC54B571A16336B1E9549ED8F119DC9605BD4B8BB4CF888A26842CD0E2FED5901C3907CFAB04892148C5724422243774C7ED583178E09ADD88D4823B60D45BFB303C332EE08632790E1CA9748D348573D34286153AB38495E9DC178FA96425B897FACEAD032BE72DBC654A5ED39D88142853F9B0CA036820D7A4BD96B9EDD4F8167B91B2D1E2182878AD86D3FB5E12248C930A454103996A777623B8205FC8142BC4722A308B20608602BAE990C150E250AFA053591815BE9CB95FB7085E12ECF894A98B330AC5AAFD8563098408DC3C29D6ACF1139EAF7358669812762A151A1D38BB56E13CB51F7A9B5303627988B5F14CD7C22AFB78C5CACCBE24B72B10877745376ED88DF18E8C4184F789C5399AFAC34C8E49D9B91C728BEA5730D9CE1E2F4827006924F473D1F60606FD0CEA53BD22177CC2EA1F9E7D29B237B1416FE021A12D58EF216A83CB7217CE91E4191236AD62558273FC7A0DCA4B5DD6F216A3586F9EA1294352AA63C8DE8CB179E11BA1C4D6C322B0E64D5627256A021933870CC087ACCCD1E8E1D0701D8B87F6F09EC869B1323CDA21411D82F1B0A49162B51677D9CDEC7660C80E61342AE766A80652A4BD34B0B4B1393F39CED2D576CE05D0F81B8D05F5AE4FB670D2A7AD8674BE5DC114A1CD9BD8B7597B8047DF5C608F4B415D48A9EE5A1F2B11DF916F0C7C9CD50E0711DE9C51506ED0638949B4C4567E2D71D42AB43C62A534705B876F46D7895080F616506A6AE9C9F4593F48B7283BDF7F7B21F29A8135E78AD7E481B9E3E4FC0459DE066ECCC4D13B19DD3865E1E780FD80274E36B3749C6FA63178F0B2331ED99900B8BBA978DA0CFDF7842CE1828EA50573FFD2B5D8A43AB5D9D5DF3219C0269EBD2E3EF4AC3B090553D4009815143E2AF7956E5D86547D9033270B725E2207635DE2D4CDF5870707D487EE73EF5E168ED2C8B5E83D48A5C8EDBC4C3655B888696E7DC6A91D0DD0A286C3B434545B8BA2DAA3E4D3F60908AF8240238D717207D3537430C95E4490D4B05F28E84C350B1510DD0A611F3B4E6BC0DD4637B26C352204EF6AC1E681C9914495D8CB8441578EF38DD727597E49867B3DA24B12A24AC02B26BAD87114921A0A112F00D059B1B230934F2C51CDF2D6DAF50B8C7DBD4F4A1B6C88DCB16A56840A2EFB081782708CD97E0738A44E52F7BD80820ED88AEBA8511C3900032652CCAE924C0A2E468C5CF7AB430FDB7C0BE3DF2C0D2301580BAA25D65F59937A09E0D131D7A5186376BAEAF03999F98ECF5B9F0ACC0FF7D9266B918D081CF30E99A24F6D7D50DF446C521B7E00EDA674B9BB9B6AFCE0E9C7B55E56F1E3820817E7B85F6371881E89017CD156AD12F44FAE4FBE910F7CD25891158A1B3F0A7116589469FE7307E8E3E8BF41F125F0588D8ACED55766CE3BBD65AB421BE11A2E7CAF0DDD6D35E8CCB4A8A9B6BE452A4D94F0AEA634E4EAD4DDD2E6B1C9ACFBD2FA6952C8EA328D269E22B6D33186E3DFFED0E38703272F1D6E4DF3B06656FD25A61FF1D2D8316ACBB4E7A5865AB5551C237C008620BF2B33B029DF1B42FEDA1922B86499728B99A7AD3D79E5619CA190C6186088EE5B1316FC4F51964809AF650CCB34FDD40A071E74F3230430DA292C336BA6F97D375EC909751F013A4B503DFAB9958A281FF16F353A06CF5B15E4EF840A5A9A130A6297345CEAC2FE7FAE797A7CA9D95B4858AAD0EB4346F21391CC1223065C98C017829915A7B130F46F0D0BE587CF93B9B021F3685A61C505BE3BCA568E8BFFFC759A9C99A04C430DC0520F7E435C50A48A6C705B928E2272D2A9830D197B6DE4CB625FE3D75CE0B9B1BD897F8F54DCDA56C156815F237C8CFD8712073559DB4FE0E39C18CCA1EBCD17A2AD15F41814005B20D08FCC1741ADB7B1C5A9CF47A9F79F62DF60A8C7E5FE98D708BB78E0C1DAA37D5BAF01C70A320F395907A799C0589D49967B18043E343CE90C0DE4EAF260BECD5507F849C193007185CBBA5EC68EA6DB14E4E93BFE33120EBD136375A9B7A08A580EEF03E979324E2D3487370FFEFC5C9094905AA7B604D98072BCDD89F9ED7E45138BC9FCD98CA0B0004D17ED98CAA2CC12A95FD34FBFCCDC5DAEDB633F37953017EDEFAD72067C036F29BBD22A5590D2B02994BBB62B72267D101124D4C70F06EB6CB7D54B0F51B6095752ED58EFA7BC1AB3044DD846551FD4B0ABBE7EBC3E5EB81A9614C0A4058730CF45895D734E2216E7F8FABAE65B2E5B2B8819E5B5AF7D7ED94E92040F544A28E4C136F345E301617A95842AB5B559C68695C72D28D046C1E331FC47EE8FE18ED75B3EBDC3756F545234C4301791AFD3C3DA5D53CD2C6424C6D0BCD3FE1E2B00C53DF9788B4D0CF1CC5F1CB7D519E9801DDF7B462209606EDB81A110E8131F155B106D8E2BBA2F5CA04E4D92F6E320BE4C1233D8363FF20B5A0762ACA4DFC053CC089C9F6D42FFB8C78DD6D99D921E72B5A7E65FDEFDE162F8944A535128FFC5347A0EC71D4169ECCDFEFB175855F6211987FDC4367C1817B5F5270744836DBCF4CEFD4795553E7BC312B6241E0E11A1A61D1C3F4C9D8B586D57E0A3C81C368402EB9639E85D7C0A258C421D2AB878551E23063E322E713B5BC27933981B5524E8F95F55238C71171E8C243AD19D1EE56D98F24388F2F8FC16EFCF120C60B65C81CA6FC2FA2487236FD5D7033CBC739DEA9DC9281AB18B64056BCD2CF8930B96086CA885CA4C20A6E63189D71A511CA7BF666C42319C8E4FAA855FFCBA0AEFE765C7BAC4FCF0C1D4BD7B86D1169A3EC635532D4D65210AF5D01C1CB2DBC99997CA700B8124F7946114CC585CC83307D32F150B4F1699F84F3C0E37A511F9E86CD0157137B2311814AA013BCE4D71CCAB0DD9A20A692AACC3152D069340EB7698B028925B1CE21D2CCAD634E0BC8D75378EACAA24805B0C712E5D2B2A8E1A737CE1D0719837F39DAFFD9B3B7C922B9E27976828664AC964C6266572E8B61C3BD376948B54141976044F8B507F5B73ACB650CBE2A3890E5B842F025C2D893DD052060D840C048BC9D02C04400FB14D10BA05C5FF26A21C45B3DF22CA2865F8084A4810784B1B73386580AFD0D8A43D8B829F3B6567EC631F3B4DE994BC2C53FC3119DCE4A350C268E648FA0D6C0E48F1D0658C46122AC008E86749ABDA27C4C6AF9CC329673FB0F57AD9CCAAD7FBF70C185AE6245D01E1DFB10DE114B3BCA66B20C6C368D088E475E1AECB6CEB805B8452052C3E58E295B777F81D7D47606CDCDEA14826419D557692AEA6B2FFE768D1CE21811E87CE936647793D100BA5B871EDEFAB2DC0CD80DA7B788865ED4E89F8CC915A32094783E22ADDE3C91EAA0C75B230B8106793EB61F190832DA002E5FF59356BB255C1F860C6CFDEBC0FD9E5D6B0CB8FD1037EF48C995CF650D1E891293BDFD4DEDFAEDA23E147D9EEF460D925B7A39AAA3C23FC5889B8D24889677AA56D0B43B80A94B78914713E22569A23BE9733E8C749857B8B581AD9E6323C287B7C2E244804B2893A5330B3A5B6596FF9CA80FC6CABFA79A3A8175D2F9364B1802A91CCC142E3386ADE431ABF8597AAB2809B545579FA4F2687BAC3D9056BE58FFFB33ED857905F10599C1D9E69D4B1F1E0ABD82EBFE61AB0D2BC85B1E22FB4B0C0D3516DAEB0EA19195B2F17AA488533A11C221991CDC273D361A6280E8021856277EC6B58B12252470E2029A769D52B578D935612D943E3F861EDF9FDFDD387040FDF6B424BB705D81E59143F029A74CB8729650411F49D3BFEA2BDFF6C4F6366236D65E290A910D49658AD7CE28E480B346EDAEEE59E70FF554F16DD959B35B93B2D991A2081913788F16050322D8C64C0F8577FD4BC77AA7B126D2797995F55FC51120F7674366BDAE130A9C2182127BAC1BBCE289A295CFD5427BB2E87B087025BBDCF6127F74E25A075FF943146EED53368729F15A6BC5268C24E8CF70E7909D5E4B85F6E526C3F115613C701803AA28B75C921398FEAEF089BD28A06881F4C7435A497D64F2E26EDEAEC43A62F1C893AB0DF0365958A073BAF3C9E17E4BD6E3563200053E7168732B23E5CEB5B48E2F5EBE96660EFF434CCDDC964C09E4028BD0EB80B9CA5CA9F8B8F661CA00FE976D7FE4DACDA1A70B6ED85B72394E8D65E53ABB3B2474D17AC62EFDBE6E7FB53833C8D440517D1CF472E9C45878BB033080C8D9371FD2B6134A4C0DC6349AE083D03F502E7DBF20AB72755FA108496015BA8052A5C6283A72D1CCBA9A2832ABF55C0F9F1EAEEC588BC1D38BD644F83572E570B7DF1C0C359570464FCC094C557F60050B93D197B99F096867160BF305F4CC755BA07FF60EC8F5B321C9C7EBD7E15F61FF4FA57F2B394BE37DBBA407A30A05826BCCECD54BEC41D7952908C01EA1E34C26CF8087CE78D837D23A7B56F92E787585C610A6EE1167A6FCB5300CDBF9D5EC69D7858D0B941C48217A6A361A9E6DF82DD6C6CC9F11071D6A6ED1135C72C19F47B483C9B47661BC767E0FF5BD5D6F2A469348A3F61D31489F1CC9AF85DFD0573297394ECEC387863CDD18FC7E7347EB9C6EA3265AB1B065D311BA5EF24E781A5144F9F763443F0A153D2050CC73C0F694286A8033ECD0B36B47D910BBD3729328A2D1609CB7FB55EB3CF2F545B7276291BC681973DE66117793BF81454ACBDF243B17A58D7A68B08E7D515E5A6C602D1F3F44AAD26E931E74E6ECA4488E0EACB208D3D173B266E8BBC99B7774E2495D65DFB66E0E2C7F90064164B4298F835A1D2994518BDB6F4E16DE8BD743D16A029EDF0B98FB7D86AA1353CBF038403AB84196B71395F0C6A7AA779DBE328D92A013268CA45E353D5FCE839FF3CB6A5951CD1A029FFCD42037635B97D1607AD39CBDD7625E2DE20449B5331E20754093C5D811139687A709951A13A0AC37160B36E304C57EBB930DC564CBDF94A269A01DCA6DE0CC5A96F8D88DC7C98C413706E00B80C724234EB871A13E5A7F7740580549E4AE8E84FD230A95AE972E21F222F6B6E19B75B817698CDA3687CD7703447B1A6766684ED20F65E8E388BAEBBC1849707BA1D9ACDD412DE379FC60509308DF155576C5219A5132CE3892C2D5FCC58863EE08D75DD052E3B494B27EE148A7BCDC6D0C571D46E821750FAFBA9CC16A9724ADF1A6EB8C914C9A4F1ABC18C74D2BE0746E948B4CFBC65C1A14D5FD6424EADB0FBCE07A9574CFDC53387BBBF5DD365497F0BF51DF6A266340B1D016C476C43777B33AD086FD7C98E3E8B49F563FB2C1F05EDEAFA8CBF5C5678374001057F4790A1392C2356EF091899B31ABD0FD4911B4614C8C5ECDBE9F3C3836F894A3B05E0745775207AF5D826A527C3B6F890FE4C238C91C7C46A837F1E08A4E1D2BEB3671F861BC46296D453D905AFE0B1AA722941A18B02887A597405180758313B5EA18D23C1B00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000cleartomark%!FontType3-1.0: QWBOSW+HiraMinProN-W619 dict dup begin/FontType 3 def/FontMatrix matrix def/FontBBox {0 0 0 0} readonly def/PaintType 0 def/StrokeWidth 0 def/BuildGlyph{save 3 1 roll1 index dupbegin/ShowProc get 3 1 roll1 index /CharProcs get exch get exec7 -1 roll execendrestore} bind def/BuildChar{1 index /Encoding get exch get1 index /BuildGlyph get exec} bind def/$SP{3 -1 roll dup /SetupSubFont get execdup setfontexch 0 0 2 index stringwidth} bind def/$SPW{4 -1 roll dup /SetupSubFont get execdup setfont3 1 roll 0 0 0 4 2 roll} bind def/$SPTW{5 -1 roll dup /SetupSubFont get execdup setfont4 1 roll neg  0 3 -1 roll 0} bind def/$RP{6 -1 roll dup /SetupSubFont get execdup setfont 5 1 rolltranslate -90 rotate 0 0 0 4 2 roll} bind def/SetupSubFont{dup /PaintType get 1 index /StrokeWidth get3 -1 roll /$SubFontArray get 4 1 roll3 index 3 index getdup /PaintType known{dup /PaintType get}{0}ifelse1 index /StrokeWidth known{1 index /StrokeWidth get}{0}ifelse3 index ne exch 4 index ne or{dup length 2 add dict begin{1 index /FID eq {pop pop}{def}ifelse}forall/StrokeWidth exch def/PaintType exch defcurrentdict enddup /CIDFontName known{/Anonymous exch /CIDFont defineresource}{/Anonymous exch definefont}ifelsedup 4 1 roll put}{ pop pop pop get}ifelse} bind def/ShowProc{systemdict /rectfill known{0 setcachelimit}if6 -1 roll dup /FontMatrix get exch /FontBBox get aload pop4 index transform 4 2 roll5 -1 roll transform 4 2 rollsetcachedevicemoveto dup type /stringtype eq {show}{glyphshow} ifelse} bind def/FontInfo 4 dict dup begin/Registry (Adobe/) def/Ordering (Japan1/) def/Supplement 7 defend readonly def/FontName /QWBOSW+HiraMinProN-W6 def/Encoding 256 array 0 1 255 {1 index exch /.notdef put} fordup 33 /uni0043.36 putdup 34 /uni006F.80 putdup 35 /uni006E.79 putdup 36 /uni0076.87 putdup 37 /uni006C.77 putdup 38 /uni0075.86 putdup 39 /uni0074.85 putdup 40 /uni0069.74 putdup 41 /uni0041.34 putdup 42 /uni0063.68 putdup 43 /uni0061.66 putreadonly def/$SubFontArray [/AAAAAF+HiraMinProN-W6 findfont /AAAAAG+HiraMinProN-W6 findfont ] def/CharProcs 13 dictdup /uniFFFD.0 {(\000) 0 $SP} 2 index /.notdef 2 index put putdup /uni0041.34 {(\000) 1 $SP} putdup /uni0043.36 {(\001) 1 $SP} putdup /uni0061.66 {(\002) 1 $SP} putdup /uni0063.68 {(\003) 1 $SP} putdup /uni0069.74 {(\004) 1 $SP} putdup /uni006C.77 {(\005) 1 $SP} putdup /uni006E.79 {(\006) 1 $SP} putdup /uni006F.80 {(\007) 1 $SP} putdup /uni0074.85 {(\010) 1 $SP} putdup /uni0075.86 {(\011) 1 $SP} putdup /uni0076.87 {(\012) 1 $SP} put def end dup /FontName get exch definefont pop%RBIEndFontSubset
/QWBOSW+HiraMinProN-W6 cguidfix
/F1.1/QWBOSW+HiraMinProN-W6 renmfont
[ /CIEBasedABC 4 dict dup begin 
/WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeABC [ 
{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 
] def 
/MatrixABC [ 0.4124 0.2126 0.0193 0.3576 0.7151 0.1192 0.1805 0.0722 0.9508 ] def 
/RangeLMN [ 0.0 0.9505 0.0 1.0000 0.0 1.0891 ] def 
end ] /Cs1 exch/ColorSpace dr pop
%%EndPageSetup
0.60000002 i
/Cs1 SC
0.94393069 0.94393069 0.94393069 sc
q
3319 5595 1045 1045 rc
3319 6640 m
4364 6640 l
4364 5595 l
3319 5595 l
3319 6640 l
h
f
6 w
0 0 0 sc
1 0 0 -1 3319 6640 cm
0 0 m
1045 0 l
1045 1045 l
0 1045 l
0 0 l
h
S
0.94393069 0.94393069 0.94393069 sc
CM
3319 6640 m
4364 6640 l
4364 5595 l
3319 5595 l
3319 6640 l
h
f
0 0 0 sc
1 0 0 -1 3319 6640 cm
0 0 m
1045 0 l
1045 1045 l
0 1045 l
0 0 l
h
S
Q
3 w
2 J
0 0 0 sc
q
0 0 7702 7884 rc
1 0 0 -1 3841 6637 cm
1.25 0.5 m
1.25 1038.5 l
S
1 0 0 -1 4098 6634 cm
0.20833333 0.5 m
0.20833333 1038.5 l
S
1 0 0 -1 3577 6634 cm
0.20833333 0.5 m
0.20833333 1038.5 l
S
0.20833333 0.5 m
0.20833333 1038.5 l
S
1 0 0 -1 3321 6115 cm
1040.5 0.25 m
0.5 0.25 l
S
1 0 0 -1 3319 6371 cm
1040.5 0.25 m
0.5 0.25 l
S
1 0 0 -1 3323 5859 cm
1040.5 0.25 m
0.5 0.25 l
S
Q
0.94393069 0.94393069 0.94393069 sc
q
3319 4207 1045 1045 rc
3319 5252 m
4364 5252 l
4364 4207 l
3319 4207 l
3319 5252 l
h
f
6 w
0 J
0 0 0 sc
1 0 0 -1 3319 5252 cm
0 0 m
1045 0 l
1045 1045 l
0 1045 l
0 0 l
h
S
0.94393069 0.94393069 0.94393069 sc
CM
3319 5252 m
4364 5252 l
4364 4207 l
3319 4207 l
3319 5252 l
h
f
0 0 0 sc
1 0 0 -1 3319 5252 cm
0 0 m
1045 0 l
1045 1045 l
0 1045 l
0 0 l
h
S
Q
0 0 0 sc
q
0 0 7702 7884 rc
1 0 0 -1 3841 5249 cm
1.25 0.5 m
1.25 1038.5 l
S
1 0 0 -1 4098 5246 cm
0.20833333 0.5 m
0.20833333 1038.5 l
S
1 0 0 -1 3577 5246 cm
0.20833333 0.5 m
0.20833333 1038.5 l
S
0.20833333 0.5 m
0.20833333 1038.5 l
S
1 0 0 -1 3321 4727 cm
1040.5 0.25 m
0.5 0.25 l
S
1 0 0 -1 3319 4983 cm
1040.5 0.25 m
0.5 0.25 l
S
1 0 0 -1 3323 4471 cm
1040.5 0.25 m
0.5 0.25 l
S
Q
0.94393069 0.94393069 0.94393069 sc
q
3319 2819 1045 1045 rc
3319 3864 m
4364 3864 l
4364 2819 l
3319 2819 l
3319 3864 l
h
f
6 w
0 J
0 0 0 sc
1 0 0 -1 3319 3864 cm
0 0 m
1045 0 l
1045 1045 l
0 1045 l
0 0 l
h
S
0.94393069 0.94393069 0.94393069 sc
CM
3319 3864 m
4364 3864 l
4364 2819 l
3319 2819 l
3319 3864 l
h
f
0 0 0 sc
1 0 0 -1 3319 3864 cm
0 0 m
1045 0 l
1045 1045 l
0 1045 l
0 0 l
h
S
Q
0 0 0 sc
q
0 0 7702 7884 rc
1 0 0 -1 3841 3861 cm
1.25 0.5 m
1.25 1038.5 l
S
1 0 0 -1 4098 3858 cm
0.20833333 0.5 m
0.20833333 1038.5 l
S
1 0 0 -1 3577 3858 cm
0.20833333 0.5 m
0.20833333 1038.5 l
S
0.20833333 0.5 m
0.20833333 1038.5 l
S
1 0 0 -1 3321 3339 cm
1040.5 0.25 m
0.5 0.25 l
S
1 0 0 -1 3319 3595 cm
1040.5 0.25 m
0.5 0.25 l
S
1 0 0 -1 3323 3083 cm
1040.5 0.25 m
0.5 0.25 l
S
Q
0.94393069 0.94393069 0.94393069 sc
q
3319 1431 1045 1045 rc
3319 2476 m
4364 2476 l
4364 1431 l
3319 1431 l
3319 2476 l
h
f
6 w
0 J
0 0 0 sc
1 0 0 -1 3319 2476 cm
0 0 m
1045 0 l
1045 1045 l
0 1045 l
0 0 l
h
S
0.94393069 0.94393069 0.94393069 sc
CM
3319 2476 m
4364 2476 l
4364 1431 l
3319 1431 l
3319 2476 l
h
f
0 0 0 sc
1 0 0 -1 3319 2476 cm
0 0 m
1045 0 l
1045 1045 l
0 1045 l
0 0 l
h
S
Q
0 0 0 sc
q
0 0 7702 7884 rc
1 0 0 -1 3841 2473 cm
1.25 0.5 m
1.25 1038.5 l
S
1 0 0 -1 4098 2470 cm
0.20833333 0.5 m
0.20833333 1038.5 l
S
1 0 0 -1 3577 2470 cm
0.20833333 0.5 m
0.20833333 1038.5 l
S
0.20833333 0.5 m
0.20833333 1038.5 l
S
1 0 0 -1 3321 1951 cm
1040.5 0.25 m
0.5 0.25 l
S
1 0 0 -1 3319 2207 cm
1040.5 0.25 m
0.5 0.25 l
S
1 0 0 -1 3323 1695 cm
1040.5 0.25 m
0.5 0.25 l
S
Q
0.94393069 0.94393069 0.94393069 sc
q
6231 4918 1045 1045 rc
6231 5963 m
7276 5963 l
7276 4918 l
6231 4918 l
6231 5963 l
h
f
6 w
0 J
0 0 0 sc
1 0 0 -1 6231 5963 cm
0 0 m
1045 0 l
1045 1045 l
0 1045 l
0 0 l
h
S
0.94393069 0.94393069 0.94393069 sc
CM
6231 5963 m
7276 5963 l
7276 4918 l
6231 4918 l
6231 5963 l
h
f
0 0 0 sc
1 0 0 -1 6231 5963 cm
0 0 m
1045 0 l
1045 1045 l
0 1045 l
0 0 l
h
S
Q
0 0 0 sc
q
0 0 7702 7884 rc
1 0 0 -1 6753 5960 cm
1.25 0.5 m
1.25 1038.5 l
S
1 0 0 -1 7010 5957 cm
0.20833333 0.5 m
0.20833333 1038.5 l
S
1 0 0 -1 6489 5957 cm
0.20833333 0.5 m
0.20833333 1038.5 l
S
0.20833333 0.5 m
0.20833333 1038.5 l
S
1 0 0 -1 6233 5438 cm
1040.5 0.25 m
0.5 0.25 l
S
1 0 0 -1 6231 5694 cm
1040.5 0.25 m
0.5 0.25 l
S
1 0 0 -1 6235 5182 cm
1040.5 0.25 m
0.5 0.25 l
S
Q
0.94393069 0.94393069 0.94393069 sc
q
6231 3530 1045 1045 rc
6231 4575 m
7276 4575 l
7276 3530 l
6231 3530 l
6231 4575 l
h
f
6 w
0 J
0 0 0 sc
1 0 0 -1 6231 4575 cm
0 0 m
1045 0 l
1045 1045 l
0 1045 l
0 0 l
h
S
0.94393069 0.94393069 0.94393069 sc
CM
6231 4575 m
7276 4575 l
7276 3530 l
6231 3530 l
6231 4575 l
h
f
0 0 0 sc
1 0 0 -1 6231 4575 cm
0 0 m
1045 0 l
1045 1045 l
0 1045 l
0 0 l
h
S
Q
0 0 0 sc
q
0 0 7702 7884 rc
1 0 0 -1 6753 4572 cm
1.25 0.5 m
1.25 1038.5 l
S
1 0 0 -1 7010 4569 cm
0.20833333 0.5 m
0.20833333 1038.5 l
S
1 0 0 -1 6489 4569 cm
0.20833333 0.5 m
0.20833333 1038.5 l
S
0.20833333 0.5 m
0.20833333 1038.5 l
S
1 0 0 -1 6233 4050 cm
1040.5 0.25 m
0.5 0.25 l
S
1 0 0 -1 6231 4306 cm
1040.5 0.25 m
0.5 0.25 l
S
1 0 0 -1 6235 3794 cm
1040.5 0.25 m
0.5 0.25 l
S
Q
0.94393069 0.94393069 0.94393069 sc
q
6231 2142 1045 1045 rc
6231 3187 m
7276 3187 l
7276 2142 l
6231 2142 l
6231 3187 l
h
f
6 w
0 J
0 0 0 sc
1 0 0 -1 6231 3187 cm
0 0 m
1045 0 l
1045 1045 l
0 1045 l
0 0 l
h
S
0.94393069 0.94393069 0.94393069 sc
CM
6231 3187 m
7276 3187 l
7276 2142 l
6231 2142 l
6231 3187 l
h
f
0 0 0 sc
1 0 0 -1 6231 3187 cm
0 0 m
1045 0 l
1045 1045 l
0 1045 l
0 0 l
h
S
Q
0 0 0 sc
q
0 0 7702 7884 rc
1 0 0 -1 6753 3184 cm
1.25 0.5 m
1.25 1038.5 l
S
1 0 0 -1 7010 3181 cm
0.20833333 0.5 m
0.20833333 1038.5 l
S
1 0 0 -1 6489 3181 cm
0.20833333 0.5 m
0.20833333 1038.5 l
S
0.20833333 0.5 m
0.20833333 1038.5 l
S
1 0 0 -1 6233 2662 cm
1040.5 0.25 m
0.5 0.25 l
S
1 0 0 -1 6231 2918 cm
1040.5 0.25 m
0.5 0.25 l
S
1 0 0 -1 6235 2406 cm
1040.5 0.25 m
0.5 0.25 l
S
Q
0.94393069 0.94393069 0.94393069 sc
q
408 6289 1045 1045 rc
408 7334 m
1453 7334 l
1453 6289 l
408 6289 l
408 7334 l
h
f
6 w
0 J
0 0 0 sc
1 0 0 -1 408 7334 cm
0 0 m
1045 0 l
1045 1045 l
0 1045 l
0 0 l
h
S
0.94393069 0.94393069 0.94393069 sc
CM
408 7334 m
1453 7334 l
1453 6289 l
408 6289 l
408 7334 l
h
f
0 0 0 sc
1 0 0 -1 408 7334 cm
0 0 m
1045 0 l
1045 1045 l
0 1045 l
0 0 l
h
S
Q
0 0 0 sc
q
0 0 7702 7884 rc
1 0 0 -1 930 7331 cm
1.25 0.5 m
1.25 1038.5 l
S
1 0 0 -1 1187 7328 cm
0.20833333 0.5 m
0.20833333 1038.5 l
S
1 0 0 -1 666 7328 cm
0.20833333 0.5 m
0.20833333 1038.5 l
S
0.20833333 0.5 m
0.20833333 1038.5 l
S
1 0 0 -1 410 6809 cm
1040.5 0.25 m
0.5 0.25 l
S
1 0 0 -1 408 7065 cm
1040.5 0.25 m
0.5 0.25 l
S
1 0 0 -1 412 6553 cm
1040.5 0.25 m
0.5 0.25 l
S
Q
0.94393069 0.94393069 0.94393069 sc
q
408 4901 1045 1045 rc
408 5946 m
1453 5946 l
1453 4901 l
408 4901 l
408 5946 l
h
f
6 w
0 J
0 0 0 sc
1 0 0 -1 408 5946 cm
0 0 m
1045 0 l
1045 1045 l
0 1045 l
0 0 l
h
S
0.94393069 0.94393069 0.94393069 sc
CM
408 5946 m
1453 5946 l
1453 4901 l
408 4901 l
408 5946 l
h
f
0 0 0 sc
1 0 0 -1 408 5946 cm
0 0 m
1045 0 l
1045 1045 l
0 1045 l
0 0 l
h
S
Q
0 0 0 sc
q
0 0 7702 7884 rc
1 0 0 -1 930 5943 cm
1.25 0.5 m
1.25 1038.5 l
S
1 0 0 -1 1187 5940 cm
0.20833333 0.5 m
0.20833333 1038.5 l
S
1 0 0 -1 666 5940 cm
0.20833333 0.5 m
0.20833333 1038.5 l
S
0.20833333 0.5 m
0.20833333 1038.5 l
S
1 0 0 -1 410 5421 cm
1040.5 0.25 m
0.5 0.25 l
S
1 0 0 -1 408 5677 cm
1040.5 0.25 m
0.5 0.25 l
S
1 0 0 -1 412 5165 cm
1040.5 0.25 m
0.5 0.25 l
S
Q
0.94393069 0.94393069 0.94393069 sc
q
408 3513 1045 1045 rc
408 4558 m
1453 4558 l
1453 3513 l
408 3513 l
408 4558 l
h
f
6 w
0 J
0 0 0 sc
1 0 0 -1 408 4558 cm
0 0 m
1045 0 l
1045 1045 l
0 1045 l
0 0 l
h
S
0.94393069 0.94393069 0.94393069 sc
CM
408 4558 m
1453 4558 l
1453 3513 l
408 3513 l
408 4558 l
h
f
0 0 0 sc
1 0 0 -1 408 4558 cm
0 0 m
1045 0 l
1045 1045 l
0 1045 l
0 0 l
h
S
Q
0 0 0 sc
q
0 0 7702 7884 rc
1 0 0 -1 930 4555 cm
1.25 0.5 m
1.25 1038.5 l
S
1 0 0 -1 1187 4552 cm
0.20833333 0.5 m
0.20833333 1038.5 l
S
1 0 0 -1 666 4552 cm
0.20833333 0.5 m
0.20833333 1038.5 l
S
0.20833333 0.5 m
0.20833333 1038.5 l
S
1 0 0 -1 410 4033 cm
1040.5 0.25 m
0.5 0.25 l
S
1 0 0 -1 408 4289 cm
1040.5 0.25 m
0.5 0.25 l
S
1 0 0 -1 412 3777 cm
1040.5 0.25 m
0.5 0.25 l
S
Q
0.94393069 0.94393069 0.94393069 sc
q
408 2125 1045 1045 rc
408 3170 m
1453 3170 l
1453 2125 l
408 2125 l
408 3170 l
h
f
6 w
0 J
0 0 0 sc
1 0 0 -1 408 3170 cm
0 0 m
1045 0 l
1045 1045 l
0 1045 l
0 0 l
h
S
0.94393069 0.94393069 0.94393069 sc
CM
408 3170 m
1453 3170 l
1453 2125 l
408 2125 l
408 3170 l
h
f
0 0 0 sc
1 0 0 -1 408 3170 cm
0 0 m
1045 0 l
1045 1045 l
0 1045 l
0 0 l
h
S
Q
0 0 0 sc
q
0 0 7702 7884 rc
1 0 0 -1 930 3167 cm
1.25 0.5 m
1.25 1038.5 l
S
1 0 0 -1 1187 3164 cm
0.20833333 0.5 m
0.20833333 1038.5 l
S
1 0 0 -1 666 3164 cm
0.20833333 0.5 m
0.20833333 1038.5 l
S
0.20833333 0.5 m
0.20833333 1038.5 l
S
1 0 0 -1 410 2645 cm
1040.5 0.25 m
0.5 0.25 l
S
1 0 0 -1 408 2901 cm
1040.5 0.25 m
0.5 0.25 l
S
1 0 0 -1 412 2389 cm
1040.5 0.25 m
0.5 0.25 l
S
Q
0.94393069 0.94393069 0.94393069 sc
q
408 737 1045 1045 rc
408 1782 m
1453 1782 l
1453 737 l
408 737 l
408 1782 l
h
f
6 w
0 J
0 0 0 sc
1 0 0 -1 408 1782 cm
0 0 m
1045 0 l
1045 1045 l
0 1045 l
0 0 l
h
S
0.94393069 0.94393069 0.94393069 sc
CM
408 1782 m
1453 1782 l
1453 737 l
408 737 l
408 1782 l
h
f
0 0 0 sc
1 0 0 -1 408 1782 cm
0 0 m
1045 0 l
1045 1045 l
0 1045 l
0 0 l
h
S
Q
0 0 0 sc
q
0 0 7702 7884 rc
1 0 0 -1 930 1779 cm
1.25 0.5 m
1.25 1038.5 l
S
1 0 0 -1 1187 1776 cm
0.20833333 0.5 m
0.20833333 1038.5 l
S
1 0 0 -1 666 1776 cm
0.20833333 0.5 m
0.20833333 1038.5 l
S
0.20833333 0.5 m
0.20833333 1038.5 l
S
1 0 0 -1 410 1257 cm
1040.5 0.25 m
0.5 0.25 l
S
1 0 0 -1 408 1513 cm
1040.5 0.25 m
0.5 0.25 l
S
1 0 0 -1 412 1001 cm
1040.5 0.25 m
0.5 0.25 l
S
1 0 0 -1 1451 6810 cm
0.5 0.5 m
1866.5 694.5 l
S
1 0 0 -1 1452 6116 cm
0.5 695.5 m
1865.5 0.5 l
S
1 0 0 -1 1453 5420 cm
0.5 0.5 m
1866.5 694.5 l
S
1 0 0 -1 1454 4726 cm
0.5 695.5 m
1865.5 0.5 l
S
1 0 0 -1 1453 4030 cm
0.5 0.5 m
1866.5 694.5 l
S
1 0 0 -1 1454 3336 cm
0.5 695.5 m
1865.5 0.5 l
S
1 0 0 -1 1451 2640 cm
0.5 0.5 m
1866.5 694.5 l
S
1 0 0 -1 1452 1946 cm
0.5 695.5 m
1865.5 0.5 l
S
1 0 0 -1 4364 6115 cm
0.5 0.5 m
1866.5 694.5 l
S
1 0 0 -1 4365 5421 cm
0.5 695.5 m
1865.5 0.5 l
S
1 0 0 -1 4364 4730 cm
0.5 0.5 m
1866.5 694.5 l
S
1 0 0 -1 4365 4036 cm
0.5 695.5 m
1865.5 0.5 l
S
1 0 0 -1 4364 3340 cm
0.5 0.5 m
1866.5 694.5 l
S
1 0 0 -1 4365 2646 cm
0.5 695.5 m
1865.5 0.5 l
S
0.98480773 0.17364818 0.17364818 -0.98480773 2872 868.46375 cm
/F1.1[ 300 0 0 -300 0 0]sf
0.40333799 264 m
(!"#$"%&'\("#)[ 228.808484 188.308484 205.408484 184.708484 188.308484 107.008484 194.608484 116.908484 106.408484 188.308484 0.000000 ] xS
0.98480773 0.17364818 0.17364818 -0.98480773 5784 1412.4637 cm
0.40333799 264 m
(!"#$"%&'\("#)[ 228.808484 188.308484 205.408484 184.708484 188.308484 107.008484 194.608484 116.908484 106.408484 188.308484 0.000000 ] xS
0.98480773 0.17364818 0.17364818 -0.98480773 -39 240.46375 cm
0.40333799 264 m
(!"#$"%&'\("#)[ 228.808484 188.308484 205.408484 184.708484 188.308484 107.008484 194.608484 116.908484 106.408484 188.308484 0.000000 ] xS
0.98480773 -0.17364818 -0.17364818 -0.98480773 1651.8308 7936.1265 cm
0.30757999 264 m
(\)*'\($+'\("#)[ 242.608484 169.708484 116.908484 106.408484 184.708484 179.008484 116.908484 106.408484 188.308484 0.000000 ] xS
0.98480773 -0.17364818 -0.17364818 -0.98480773 4638.0942 7386.2314 cm
0.30757999 264 m
(\)*'\($+'\("#)[ 242.608484 169.708484 116.908484 106.408484 184.708484 179.008484 116.908484 106.408484 188.308484 0.000000 ] xS
ep
end
